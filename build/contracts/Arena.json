{
  "contractName": "Arena",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "TransferAnimal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_tokenOwner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_whitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "auction",
      "outputs": [
        {
          "internalType": "address",
          "name": "chairperson",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startingPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "highestBid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "winner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "availableToBreed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "bidAuction",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "bidderToBid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dogId1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_dogId2",
          "type": "uint256"
        }
      ],
      "name": "breedAnimal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "breederDogs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "enum DogRegisterCoin.Race",
          "name": "race",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isMale",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "age",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "category",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "claimAuction",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "contractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startingPrice",
          "type": "uint256"
        }
      ],
      "name": "createAuction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "deadAnimal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_breeder",
          "type": "address"
        },
        {
          "internalType": "enum DogRegisterCoin.Race",
          "name": "_race",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "_isMale",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "_age",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "_category",
          "type": "uint8"
        }
      ],
      "name": "declareAnimal",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dogsById",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "enum DogRegisterCoin.Race",
          "name": "race",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isMale",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "age",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "category",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dogsInAuction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "fightProposition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "fightsById",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "dog1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dog2",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bid",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "accepted",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "winner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getHighestBid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dogId",
          "type": "uint256"
        }
      ],
      "name": "proposeToBreed",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_breeder",
          "type": "address"
        }
      ],
      "name": "registerBreeder",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "updateBid",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_myDog",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_opponent",
          "type": "uint256"
        }
      ],
      "name": "proposeToFight",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_myDog",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_opponent",
          "type": "uint256"
        }
      ],
      "name": "agreeToFight",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"TransferAnimal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_tokenOwner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_myDog\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_opponent\",\"type\":\"uint256\"}],\"name\":\"agreeToFight\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"auction\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"chairperson\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startingPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"highestBid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"availableToBreed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"bidAuction\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bidderToBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dogId1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dogId2\",\"type\":\"uint256\"}],\"name\":\"breedAnimal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"breederDogs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum DogRegisterCoin.Race\",\"name\":\"race\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isMale\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"age\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"claimAuction\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startingPrice\",\"type\":\"uint256\"}],\"name\":\"createAuction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"deadAnimal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_breeder\",\"type\":\"address\"},{\"internalType\":\"enum DogRegisterCoin.Race\",\"name\":\"_race\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"_isMale\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"_age\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_category\",\"type\":\"uint8\"}],\"name\":\"declareAnimal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dogsById\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum DogRegisterCoin.Race\",\"name\":\"race\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isMale\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"age\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dogsInAuction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fightProposition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fightsById\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"dog1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dog2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bid\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getHighestBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dogId\",\"type\":\"uint256\"}],\"name\":\"proposeToBreed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_myDog\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_opponent\",\"type\":\"uint256\"}],\"name\":\"proposeToFight\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_breeder\",\"type\":\"address\"}],\"name\":\"registerBreeder\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"updateBid\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/cleme/Desktop/smart_contracts_ethereum/TD6/contracts/Arena.sol\":\"Arena\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/cleme/Desktop/smart_contracts_ethereum/TD6/contracts/Arena.sol\":{\"keccak256\":\"0xd81e1eccff453856493f0a7b822ae523b4fb02a637b7613ee00316eaf2593b30\",\"urls\":[\"bzz-raw://374883560aad9293d56826c43fab3fdd9bb3beda9645e19877134ce258c3815c\",\"dweb:/ipfs/QmbB7gD53cvfTu1NrSXfem38t7KNCENSFXX24vUXMMw89A\"]},\"/C/Users/cleme/Desktop/smart_contracts_ethereum/TD6/contracts/Auction.sol\":{\"keccak256\":\"0x1b946dd0b25db81dc33c91a6741248721ed78fc43eb9de2f7a58c3733ae9a356\",\"urls\":[\"bzz-raw://7fca15ab35b81000ca1c28a676b7635375a999b120f51565290356780fda41f1\",\"dweb:/ipfs/Qmbemz6T62F7Qz4DtZxPik7Gbb76x5FSvss5K2Soie8JAz\"]},\"/C/Users/cleme/Desktop/smart_contracts_ethereum/TD6/contracts/Breedding.sol\":{\"keccak256\":\"0x0d318ce22fd5fce1c5fd005b83616ffe9f34e4d301bf1e5d257cdf58563067cc\",\"urls\":[\"bzz-raw://9dcc971a52582b531fdca14e7724b4678a1404f4b65fb8c84a8e671de77d77a0\",\"dweb:/ipfs/QmeroqPXhXrL6Lh3hh5Jk181gdTSCVg54ZEkBG3JKpFQuh\"]},\"/C/Users/cleme/Desktop/smart_contracts_ethereum/TD6/contracts/DogRegisterCoin.sol\":{\"keccak256\":\"0x46e82c7c1b43535b55bcd722ebf99ddb4866abfd425a10b02ed3a10474c3b764\",\"urls\":[\"bzz-raw://518bd7271d74dbb8df17f479da6157abe20d9aab3dc8f5b59fe31de2ad113afd\",\"dweb:/ipfs/QmVyhb1Nz2djw5QwQFzjoQJQncoGL7gZsYdSbFscrE91xu\"]},\"/C/Users/cleme/Desktop/smart_contracts_ethereum/TD6/contracts/ERC721.sol\":{\"keccak256\":\"0x1f0f1089095152c163ae503126aa1889273138e9ee140c00b0ed26be45c001dd\",\"urls\":[\"bzz-raw://41e119d2ae965703d7109b26e45878abd986f57e537233fed879d0c48b00c793\",\"dweb:/ipfs/QmTZxsKLNY26T1BuBRigQJNNWXCR4adez2aP5FmAVSTcCT\"]},\"/C/Users/cleme/Desktop/smart_contracts_ethereum/TD6/contracts/IERC721.sol\":{\"keccak256\":\"0x115fb9948bd468b709080088c6de7665c6678239067757e89818f85683a27cac\",\"urls\":[\"bzz-raw://ee59bb4c829bc4486826b4fc27224724dfc849b9abf47118cb3ed7d058d597d4\",\"dweb:/ipfs/QmQXm91uXABT2v96ZVLjzMqF8fHzTSf9nDpTjf4aLQC2uU\"]},\"/C/Users/cleme/Desktop/smart_contracts_ethereum/TD6/contracts/SafeMath.sol\":{\"keccak256\":\"0x5a27949a5c3617ccc6ef2fbef51b444f4977b8b92d8f07734b0c7c07420bf282\",\"urls\":[\"bzz-raw://9454858a81ae98c0f6672c8647e3cd5e6b5b1c9a5d8dbc267b1434a521159be4\",\"dweb:/ipfs/QmRdMAXgCAExPijPi7xpvR9aS4rQLX5qCfNcSaRTDtFgTM\"]}},\"version\":1}",
  "bytecode": "0x60806040526040516200001290620000b7565b604051809103906000f0801580156200002f573d6000803e3d6000fd5b50600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000c5565b610fa3806200570883390190565b61563380620000d56000396000f3fe6080604052600436106101e35760003560e01c806386f253aa11610102578063ac3df33011610095578063cfdb63ac11610064578063cfdb63ac14610bfe578063d748bc6414610c67578063e985e9c514610d02578063ec9b6db914610d8b576101e3565b8063ac3df33014610ab3578063c1722d2b14610b18578063c4b4b16b14610b50578063ce6cc0fb14610bab576101e3565b8063909e268a116100d1578063909e268a146109305780639aafc6c9146109d9578063a22cb46514610a07578063a7ccfca514610a64576101e3565b806386f253aa1461080c5780638b7afe2e1461085f5780638da5cb5b1461088a5780638f288644146108e1576101e3565b80635e6bab681161017a57806370a082311161014957806370a08231146106b957806372368bdc1461071e578063796db312146107565780637dcdf9be146107d1576101e3565b80635e6bab681461052f578063617065e3146105745780636352211e1461061057806364a7d7c71461068b576101e3565b806323b872dd116101b657806323b872dd146103b95780634065cc671461042757806343129de1146104b0578063476fd474146104de576101e3565b80630121683f146101e8578063081812fc1461022d578063095ea7b3146102a85780631200617f146102f6575b600080fd5b3480156101f457600080fd5b5061022b6004803603604081101561020b57600080fd5b810190808035906020019092919080359060200190929190505050610dc6565b005b34801561023957600080fd5b506102666004803603602081101561025057600080fd5b8101908080359060200190929190505050611090565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102f4600480360360408110156102be57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061113c565b005b34801561030257600080fd5b5061032f6004803603602081101561031957600080fd5b8101908080359060200190929190505050611354565b604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405180910390f35b610425600480360360608110156103cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113ca565b005b34801561043357600080fd5b506104606004803603602081101561044a57600080fd5b810190808035906020019092919050505061179f565b6040518086815260200185600881111561047657fe5b60ff168152602001841515151581526020018360ff1660ff1681526020018260ff1660ff1681526020019550505050505060405180910390f35b6104dc600480360360208110156104c657600080fd5b8101908080359060200190929190505050611809565b005b3480156104ea57600080fd5b5061052d6004803603602081101561050157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a3b565b005b34801561053b57600080fd5b506105726004803603604081101561055257600080fd5b810190808035906020019092919080359060200190929190505050611ca9565b005b34801561058057600080fd5b506105f6600480360360a081101561059757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190803515159060200190929190803560ff169060200190929190803560ff169060200190929190505050611f84565b604051808215151515815260200191505060405180910390f35b34801561061c57600080fd5b506106496004803603602081101561063357600080fd5b81019080803590602001909291905050506122ef565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106b7600480360360208110156106a157600080fd5b8101908080359060200190929190505050612404565b005b3480156106c557600080fd5b50610708600480360360208110156106dc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506127c9565b6040518082815260200191505060405180910390f35b6107546004803603604081101561073457600080fd5b8101908080359060200190929190803590602001909291905050506128b6565b005b34801561076257600080fd5b5061078f6004803603602081101561077957600080fd5b8101908080359060200190929190505050612c36565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107dd57600080fd5b5061080a600480360360208110156107f457600080fd5b8101908080359060200190929190505050612c69565b005b34801561081857600080fd5b506108456004803603602081101561082f57600080fd5b8101908080359060200190929190505050612da3565b604051808215151515815260200191505060405180910390f35b34801561086b57600080fd5b50610874612dc3565b6040518082815260200191505060405180910390f35b34801561089657600080fd5b5061089f612de2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156108ed57600080fd5b5061091a6004803603602081101561090457600080fd5b8101908080359060200190929190505050612e08565b6040518082815260200191505060405180910390f35b34801561093c57600080fd5b506109896004803603604081101561095357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612e28565b6040518086815260200185600881111561099f57fe5b60ff168152602001841515151581526020018360ff1660ff1681526020018260ff1660ff1681526020019550505050505060405180910390f35b610a05600480360360208110156109ef57600080fd5b8101908080359060200190929190505050612eac565b005b348015610a1357600080fd5b50610a6260048036036040811015610a2a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506131fe565b005b348015610a7057600080fd5b50610a9d60048036036020811015610a8757600080fd5b8101908080359060200190929190505050613384565b6040518082815260200191505060405180910390f35b348015610abf57600080fd5b50610b0260048036036020811015610ad657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061339c565b6040518082815260200191505060405180910390f35b610b4e60048036036040811015610b2e57600080fd5b8101908080359060200190929190803590602001909291905050506133b4565b005b348015610b5c57600080fd5b50610ba960048036036040811015610b7357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061365d565b005b348015610bb757600080fd5b50610be460048036036020811015610bce57600080fd5b81019080803590602001909291905050506139b4565b604051808215151515815260200191505060405180910390f35b348015610c0a57600080fd5b50610c4d60048036036020811015610c2157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506139d4565b604051808215151515815260200191505060405180910390f35b348015610c7357600080fd5b50610ca060048036036020811015610c8a57600080fd5b81019080803590602001909291905050506139f4565b60405180868152602001858152602001848152602001831515151581526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405180910390f35b348015610d0e57600080fd5b50610d7160048036036040811015610d2557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613a57565b604051808215151515815260200191505060405180910390f35b348015610d9757600080fd5b50610dc460048036036020811015610dae57600080fd5b8101908080359060200190929190505050613aeb565b005b610dcf826122ef565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e53576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806154c46021913960400191505060405180910390fd5b6008600084815260200190815260200160002060009054906101000a900460ff1615610ee7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f646f6720697320616c726561647920696e2061756374696f6e0000000000000081525060200191505060405180910390fd5b610eef6151fa565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505042816060018181525050828160400181815250508281608001818152505060008160a0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060016008600086815260200190815260200160002060006101000a81548160ff02191690831515021790555080600d600086815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061102192919061525c565b5060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050505050565b600081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561110057600080fd5b6002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806154816022913960400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061126757506112666001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633613a57565b5b61127057600080fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600d6020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905085565b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561146e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6164647265737320307830206973206e6f742076616c6964000000000000000081525060200191505060405180910390fd5b81600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156114dc57600080fd5b33838173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061154b57508173ffffffffffffffffffffffffffffffffffffffff1661153382611090565b73ffffffffffffffffffffffffffffffffffffffff16145b8061158f575061158e6001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683613a57565b5b61159857600080fd5b8673ffffffffffffffffffffffffffffffffffffffff166001600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461164f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806155d4602b913960400191505060405180910390fd5b60016000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555060016000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550856001600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050505050565b60096020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900460ff16908060010160029054906101000a900460ff16908060010160039054906101000a900460ff16905085565b600d60008281526020019081526020016000206004015434600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401116118b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260338152602001806153e96033913960400191505060405180910390fd5b426202a300600d600084815260200190815260200160002060030154011015611949576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f61756374696f6e2069732066696e69736865640000000000000000000000000081525060200191505060405180910390fd5b61199b34600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613c0c90919063ffffffff16565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600d60008381526020019081526020016000206004018190555050565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611adf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6164647265737320307830206973206e6f742076616c6964000000000000000081525060200191505060405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611b86576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806154c46021913960400191505060405180910390fd5b60001515600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514611c4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f6272656564657220616c7265616479207265676973746572656400000000000081525060200191505060405180910390fd5b6001600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b600115156009600084815260200190815260200160002060010160019054906101000a900460ff161515148015611d075750600015156009600083815260200190815260200160002060010160019054906101000a900460ff161515145b80611d6c5750600015156009600084815260200190815260200160002060010160019054906101000a900460ff161515148015611d6b5750600115156009600083815260200190815260200160002060010160019054906101000a900460ff161515145b5b611dc1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806155076026913960400191505060405180910390fd5b611dcb3383613c2b565b80611ddc5750611ddb3382613c2b565b5b611e31576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806155a8602c913960400191505060405180910390fd5b600a600083815260200190815260200160002060009054906101000a900460ff168015611e7b5750600a600082815260200190815260200160002060009054906101000a900460ff165b611ed0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806154e56022913960400191505060405180910390fd5b6000611edc8383613cff565b9050600060026009600085815260200190815260200160002060010160039054906101000a900460ff166009600087815260200190815260200160002060010160039054906101000a900460ff160160ff1681611f3557fe5b049050611f423385613c2b565b8015611f545750611f533384613c2b565b5b15611f6e57611f6833836001600085611f84565b50611f7e565b611f7c8260016000846140f0565b505b50505050565b600085600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561202a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6164647265737320307830206973206e6f742076616c6964000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146120cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f627265656465722061646472657373206973206e6f7420636f7272656374000081525060200191505060405180910390fd5b6006600081548092919060010191905055506120e56152e6565b6040518060a00160405280600654815260200188600881111561210457fe5b815260200187151581526020018660ff1681526020018560ff168152509050600b60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548160ff021916908360088111156121bc57fe5b021790555060408201518160010160016101000a81548160ff02191690831515021790555060608201518160010160026101000a81548160ff021916908360ff16021790555060808201518160010160036101000a81548160ff021916908360ff160217905550505050806009600060065481526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff0219169083600881111561226a57fe5b021790555060408201518160010160016101000a81548160ff02191690831515021790555060608201518160010160026101000a81548160ff021916908360ff16021790555060808201518160010160036101000a81548160ff021916908360ff1602179055509050506122e088600654614324565b60019250505095945050505050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156123c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6164647265737320307830206973206e6f742076616c6964000000000000000081525060200191505060405180910390fd5b6001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b3373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156124bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061545e6023913960400191505060405180910390fd5b600115156008600083815260200190815260200160002060009054906101000a900460ff16151514612556576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f646f67206973206e6f7420696e2061756374696f6e000000000000000000000081525060200191505060405180910390fd5b600d60008281526020019081526020016000206004015434116125c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d81526020018061552d602d913960400191505060405180910390fd5b426202a300600d600084815260200190815260200160002060030154011015612655576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f61756374696f6e2069732066696e69736865640000000000000000000000000081525060200191505060405180910390fd5b6000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146126ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806153b36036913960400191505060405180910390fd5b34600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600d60008281526020019081526020016000206001013390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505034600d60008381526020019081526020016000206004018190555050565b600081600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561286f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6164647265737320307830206973206e6f742076616c6964000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b3373ffffffffffffffffffffffffffffffffffffffff166128d6836122ef565b73ffffffffffffffffffffffffffffffffffffffff1614612942576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061541c6021913960400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16612962826122ef565b73ffffffffffffffffffffffffffffffffffffffff1614156129ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f5f6f70706f6e656e742063616e27742062652066726f6d2073656e646572000081525060200191505060405180910390fd5b600015156008600084815260200190815260200160002060009054906101000a900460ff161515148015612a445750600015156008600083815260200190815260200160002060009054906101000a900460ff161515145b612ab6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f646f6773206d757374206e6f7420626520696e2061756374696f6e000000000081525060200191505060405180910390fd5b60003411612b2c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f76616c7565206d757374206265207374726963746c7920706f7369746976650081525060200191505060405180910390fd5b80600f6000848152602001908152602001600020819055506000349050612b51615328565b6040518060a00160405280858152602001848152602001838152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152509050806010600086815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555060808201518160030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050505050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b612c72816122ef565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612cf6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806154c46021913960400191505060405180910390fd5b60001515600a600084815260200190815260200160002060009054906101000a900460ff16151514612d73576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061543d6021913960400191505060405180910390fd5b6001600a600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600a6020528060005260406000206000915054906101000a900460ff1681565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600d6000838152602001908152602001600020600401549050919050565b600b6020528160005260406000208181548110612e4157fe5b9060005260206000209060020201600091509150508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900460ff16908060010160029054906101000a900460ff16908060010160039054906101000a900460ff16905085565b600115156008600083815260200190815260200160002060009054906101000a900460ff16151514612f46576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f646f67206d75737420626520696e2061756374696f6e0000000000000000000081525060200191505060405180910390fd5b6202a300600d600083815260200190815260200160002060030154014211612fd6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f61756374696f6e206973206e6f742066696e697368656420796574000000000081525060200191505060405180910390fd5b600d600082815260200190815260200160002060040154600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146130a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f73656e646572206973206e6f74207468652077696e6e6572000000000000000081525060200191505060405180910390fd5b33600d600083815260200190815260200160002060050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506130fe81614542565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd613145836122ef565b33846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1580156131e357600080fd5b505af11580156131f7573d6000803e3d6000fd5b5050505050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613283576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806154a36021913960400191505060405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b600f6020528060005260406000206000915090505481565b600e6020528060005260406000206000915090505481565b3373ffffffffffffffffffffffffffffffffffffffff166133d4836122ef565b73ffffffffffffffffffffffffffffffffffffffff16146133f457600080fd5b81600f6000838152602001908152602001600020541461341357600080fd5b3460106000838152602001908152602001600020600201541461343557600080fd5b600015156010600083815260200190815260200160002060030160009054906101000a900460ff1615151461346957600080fd5b80600f60008481526020019081526020016000208190555060016010600083815260200190815260200160002060030160006101000a81548160ff02191690831515021790555060006134ba614856565b905060008160ff161415613592576134d1836122ef565b6010600084815260200190815260200160002060030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061352e836122ef565b73ffffffffffffffffffffffffffffffffffffffff166108fc60106000858152602001908152602001600020600201546002029081150290604051600060405180830381858888f1935050505015801561358c573d6000803e3d6000fd5b50613658565b61359b826122ef565b6010600084815260200190815260200160002060030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506135f8826122ef565b73ffffffffffffffffffffffffffffffffffffffff166108fc60106000858152602001908152602001600020600201546002029081150290604051600060405180830381858888f19350505050158015613656573d6000803e3d6000fd5b505b505050565b613666816122ef565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146136ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806154c46021913960400191505060405180910390fd5b600015156008600084815260200190815260200160002060009054906101000a900460ff16151514613767576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602981526020018061557f6029913960400191505060405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3385856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b15801561384457600080fd5b505af1158015613858573d6000803e3d6000fd5b5050505061386633836148e7565b600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206009600084815260200190815260200160002090806001815401808255809150509060018203906000526020600020906002020160009091929091909150600082015481600001556001820160009054906101000a900460ff168160010160006101000a81548160ff0219169083600881111561391e57fe5b02179055506001820160019054906101000a900460ff168160010160016101000a81548160ff0219169083151502179055506001820160029054906101000a900460ff168160010160026101000a81548160ff021916908360ff1602179055506001820160039054906101000a900460ff168160010160036101000a81548160ff021916908360ff160217905550505050505050565b60086020528060005260406000206000915054906101000a900460ff1681565b60076020528060005260406000206000915054906101000a900460ff1681565b60106020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905085565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b613af4816122ef565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614613b78576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806154c46021913960400191505060405180910390fd5b6000613b83836122ef565b9050613b8f3384614ccd565b600960008481526020019081526020016000206000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549060ff02191690556001820160026101000a81549060ff02191690556001820160036101000a81549060ff02191690555050613c0781846148e7565b505050565b600080828401905083811015613c2157600080fd5b8091505092915050565b600080905060008090505b600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015613cf55782600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110613ccb57fe5b9060005260206000209060020201600001541415613ce857600191505b8080600101915050613c36565b5080905092915050565b6000613d096152e6565b600960008581526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900460ff166008811115613d4f57fe5b6008811115613d5a57fe5b81526020016001820160019054906101000a900460ff161515151581526020016001820160029054906101000a900460ff1660ff1660ff1681526020016001820160039054906101000a900460ff1660ff1660ff16815250509050613dbd6152e6565b600960008581526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900460ff166008811115613e0357fe5b6008811115613e0e57fe5b81526020016001820160019054906101000a900460ff161515151581526020016001820160029054906101000a900460ff1660ff1660ff1681526020016001820160039054906101000a900460ff1660ff1660ff1681525050905060006008811115613e7657fe5b82602001516008811115613e8657fe5b148015613ead575060016008811115613e9b57fe5b81602001516008811115613eab57fe5b145b80613ef8575060016008811115613ec057fe5b82602001516008811115613ed057fe5b148015613ef7575060006008811115613ee557fe5b81602001516008811115613ef557fe5b145b5b15613f0657600592506140e5565b60016008811115613f1357fe5b82602001516008811115613f2357fe5b148015613f4a575060046008811115613f3857fe5b81602001516008811115613f4857fe5b145b80613f95575060046008811115613f5d57fe5b82602001516008811115613f6d57fe5b148015613f94575060016008811115613f8257fe5b81602001516008811115613f9257fe5b145b5b15613fa357600692506140e4565b60026008811115613fb057fe5b82602001516008811115613fc057fe5b148015613fe7575060036008811115613fd557fe5b81602001516008811115613fe557fe5b145b80614032575060036008811115613ffa57fe5b8260200151600881111561400a57fe5b14801561403157506002600881111561401f57fe5b8160200151600881111561402f57fe5b145b5b1561404057600192506140e3565b6000600881111561404d57fe5b8260200151600881111561405d57fe5b14801561408457506004600881111561407257fe5b8160200151600881111561408257fe5b145b806140cf57506004600881111561409757fe5b826020015160088111156140a757fe5b1480156140ce5750600060088111156140bc57fe5b816020015160088111156140cc57fe5b145b5b156140dd57600792506140e2565b600892505b5b5b5b829250505092915050565b6000803090506006600081548092919060010191905055506141106152e6565b6040518060a00160405280600654815260200188600881111561412f57fe5b815260200187151581526020018660ff1681526020018560ff168152509050600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548160ff021916908360088111156141e757fe5b021790555060408201518160010160016101000a81548160ff02191690831515021790555060608201518160010160026101000a81548160ff021916908360ff16021790555060808201518160010160036101000a81548160ff021916908360ff160217905550505050806009600060065481526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff0219169083600881111561429557fe5b021790555060408201518160010160016101000a81548160ff02191690831515021790555060608201518160010160026101000a81548160ff021916908360ff16021790555060808201518160010160036101000a81548160ff021916908360ff16021790555090505061430a600654614e8d565b61431682600654614324565b600192505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156143c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b6143d0816150ca565b15614443576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60008090505b600d6000838152602001908152602001600020600101805490508110156147d757600d600083815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600d600084815260200190815260200160002060010182815481106145d757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146147ca57600d6000838152602001908152602001600020600101818154811061463e57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600e6000600d600087815260200190815260200160002060010185815481106146a757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f19350505050158015614738573d6000803e3d6000fd5b506000600e6000600d6000868152602001908152602001600020600101848154811061476057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8080600101915050614548565b506000600e6000600d600085815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b600060024260115433604051602001808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140193505050506040516020818303038152906040528051906020012060001c816148cc57fe5b06905060116000815480929190600101919050555080905090565b600080905060008090506000600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905090505b83600b60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020848154811061498457fe5b906000526020600020906002020160000154146149a8578280600101935050614939565b60018103831415614a6b57600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106149fd57fe5b90600052602060002090600202016000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549060ff02191690556001820160026101000a81549060ff02191690556001820160036101000a81549060ff02191690555050614cbd565b8291505b60018103821015614c0657600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001830181548110614ac757fe5b9060005260206000209060020201600b60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110614b1f57fe5b9060005260206000209060020201600082015481600001556001820160009054906101000a900460ff168160010160006101000a81548160ff02191690836008811115614b6857fe5b02179055506001820160019054906101000a900460ff168160010160016101000a81548160ff0219169083151502179055506001820160029054906101000a900460ff168160010160026101000a81548160ff021916908360ff1602179055506001820160039054906101000a900460ff168160010160036101000a81548160ff021916908360ff1602179055509050508180600101925050614a6f565b600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001820381548110614c5357fe5b90600052602060002090600202016000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549060ff02191690556001820160026101000a81549060ff02191690556001820160036101000a81549060ff021916905550505b8080600190039150505050505050565b8173ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614614d84576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061555a6025913960400191505060405180910390fd5b614d8d8161513c565b60016000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555060006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008600082815260200190815260200160002060009054906101000a900460ff1615614f21576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f646f6720697320616c726561647920696e2061756374696f6e0000000000000081525060200191505060405180910390fd5b614f296151fa565b30816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050428160600181815250506001816040018181525050600081608001818152505060008160a0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060016008600084815260200190815260200160002060006101000a81548160ff02191690831515021790555080600d600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061505d92919061525c565b5060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050505050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146151f75760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b8280548282559060005260206000209081019282156152d5579160200282015b828111156152d45782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061527c565b5b5090506152e2919061536f565b5090565b6040518060a00160405280600081526020016000600881111561530557fe5b8152602001600015158152602001600060ff168152602001600060ff1681525090565b6040518060a00160405280600081526020016000815260200160008152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6153af91905b808211156153ab57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101615375565b5090565b9056fe6269646465722063616e6e6f7420626964206f6e207365766572616c2061756374696f6e7320696e207468652073616d652074696d657570646174656420626964206d757374206265207375706572696f7220746f2063757272656e742068696768657374206269645f6d79446f67206861766520746f206265206f776e65642062792073656e646572646f6720697320616c726561647920617661696c61626c6520746f206272656564746f6b656e206f776e65722063616e2774206265206d6573736167652073656e646572455243373231203a204f776e657220697320616c726561647920617070726f7665644552433732313a204f776e657220697320616c726561647920617070726f76656473656e646572206973206e6f742074686520636f72726563742061646472657373646f6773206861766520746f20626520617661696c61626c6520746f2062726565646e6f7420706f737369626c6520746f2062726565642073616d652073657820616e696d616c736d73672e76616c7565206d757374206265207375706572696f7220746f207468652068696768657374206269644552433732313a206275726e206f6620746f6b656e2074686174206973206e6f74206f776e63616e2774207472616e7366657220616e696d616c20776869636820697320696e2061756374696f6e6d6573736167652073656e646572206973206e6f74206f6e65206f662074686520746f6b656e206f776e65724552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e6564a265627a7a72315820d6590527127270788adebcf67912ead5fec179f663a5be7baddcff0635befd1c64736f6c634300050c0032608060405234801561001057600080fd5b50610f83806100206000396000f3fe60806040526004361061007b5760003560e01c806370a082311161004e57806370a0823114610232578063796db31214610297578063a22cb46514610312578063e985e9c51461036f5761007b565b8063081812fc14610080578063095ea7b3146100fb57806323b872dd146101495780636352211e146101b7575b600080fd5b34801561008c57600080fd5b506100b9600480360360208110156100a357600080fd5b81019080803590602001909291905050506103f8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101476004803603604081101561011157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104a4565b005b6101b56004803603606081101561015f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106bc565b005b3480156101c357600080fd5b506101f0600480360360208110156101da57600080fd5b8101908080359060200190929190505050610a91565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561023e57600080fd5b506102816004803603602081101561025557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba6565b6040518082815260200191505060405180910390f35b3480156102a357600080fd5b506102d0600480360360208110156102ba57600080fd5b8101908080359060200190929190505050610c93565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561031e57600080fd5b5061036d6004803603604081101561033557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610cc6565b005b34801561037b57600080fd5b506103de6004803603604081101561039257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e4c565b604051808215151515815260200191505060405180910390f35b600081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561046857600080fd5b6002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610529576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610ee16022913960400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806105cf57506105ce6001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633610e4c565b5b6105d857600080fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610760576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6164647265737320307830206973206e6f742076616c6964000000000000000081525060200191505060405180910390fd5b81600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156107ce57600080fd5b33838173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061083d57508173ffffffffffffffffffffffffffffffffffffffff16610825826103f8565b73ffffffffffffffffffffffffffffffffffffffff16145b8061088157506108806001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610e4c565b5b61088a57600080fd5b8673ffffffffffffffffffffffffffffffffffffffff166001600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610941576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180610f24602b913960400191505060405180910390fd5b60016000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555060016000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550856001600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050505050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b6a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6164647265737320307830206973206e6f742076616c6964000000000000000081525060200191505060405180910390fd5b6001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b600081600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c4c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6164647265737320307830206973206e6f742076616c6964000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610f036021913960400191505060405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690509291505056fe455243373231203a204f776e657220697320616c726561647920617070726f7665644552433732313a204f776e657220697320616c726561647920617070726f7665644552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e6564a265627a7a723158206a784257c34f68a1ad2d90531af64135e72ac26396daf2b8376bb782aa9ad7c664736f6c634300050c0032",
  "deployedBytecode": "0x6080604052600436106101e35760003560e01c806386f253aa11610102578063ac3df33011610095578063cfdb63ac11610064578063cfdb63ac14610bfe578063d748bc6414610c67578063e985e9c514610d02578063ec9b6db914610d8b576101e3565b8063ac3df33014610ab3578063c1722d2b14610b18578063c4b4b16b14610b50578063ce6cc0fb14610bab576101e3565b8063909e268a116100d1578063909e268a146109305780639aafc6c9146109d9578063a22cb46514610a07578063a7ccfca514610a64576101e3565b806386f253aa1461080c5780638b7afe2e1461085f5780638da5cb5b1461088a5780638f288644146108e1576101e3565b80635e6bab681161017a57806370a082311161014957806370a08231146106b957806372368bdc1461071e578063796db312146107565780637dcdf9be146107d1576101e3565b80635e6bab681461052f578063617065e3146105745780636352211e1461061057806364a7d7c71461068b576101e3565b806323b872dd116101b657806323b872dd146103b95780634065cc671461042757806343129de1146104b0578063476fd474146104de576101e3565b80630121683f146101e8578063081812fc1461022d578063095ea7b3146102a85780631200617f146102f6575b600080fd5b3480156101f457600080fd5b5061022b6004803603604081101561020b57600080fd5b810190808035906020019092919080359060200190929190505050610dc6565b005b34801561023957600080fd5b506102666004803603602081101561025057600080fd5b8101908080359060200190929190505050611090565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102f4600480360360408110156102be57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061113c565b005b34801561030257600080fd5b5061032f6004803603602081101561031957600080fd5b8101908080359060200190929190505050611354565b604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405180910390f35b610425600480360360608110156103cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113ca565b005b34801561043357600080fd5b506104606004803603602081101561044a57600080fd5b810190808035906020019092919050505061179f565b6040518086815260200185600881111561047657fe5b60ff168152602001841515151581526020018360ff1660ff1681526020018260ff1660ff1681526020019550505050505060405180910390f35b6104dc600480360360208110156104c657600080fd5b8101908080359060200190929190505050611809565b005b3480156104ea57600080fd5b5061052d6004803603602081101561050157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a3b565b005b34801561053b57600080fd5b506105726004803603604081101561055257600080fd5b810190808035906020019092919080359060200190929190505050611ca9565b005b34801561058057600080fd5b506105f6600480360360a081101561059757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190803515159060200190929190803560ff169060200190929190803560ff169060200190929190505050611f84565b604051808215151515815260200191505060405180910390f35b34801561061c57600080fd5b506106496004803603602081101561063357600080fd5b81019080803590602001909291905050506122ef565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106b7600480360360208110156106a157600080fd5b8101908080359060200190929190505050612404565b005b3480156106c557600080fd5b50610708600480360360208110156106dc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506127c9565b6040518082815260200191505060405180910390f35b6107546004803603604081101561073457600080fd5b8101908080359060200190929190803590602001909291905050506128b6565b005b34801561076257600080fd5b5061078f6004803603602081101561077957600080fd5b8101908080359060200190929190505050612c36565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107dd57600080fd5b5061080a600480360360208110156107f457600080fd5b8101908080359060200190929190505050612c69565b005b34801561081857600080fd5b506108456004803603602081101561082f57600080fd5b8101908080359060200190929190505050612da3565b604051808215151515815260200191505060405180910390f35b34801561086b57600080fd5b50610874612dc3565b6040518082815260200191505060405180910390f35b34801561089657600080fd5b5061089f612de2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156108ed57600080fd5b5061091a6004803603602081101561090457600080fd5b8101908080359060200190929190505050612e08565b6040518082815260200191505060405180910390f35b34801561093c57600080fd5b506109896004803603604081101561095357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612e28565b6040518086815260200185600881111561099f57fe5b60ff168152602001841515151581526020018360ff1660ff1681526020018260ff1660ff1681526020019550505050505060405180910390f35b610a05600480360360208110156109ef57600080fd5b8101908080359060200190929190505050612eac565b005b348015610a1357600080fd5b50610a6260048036036040811015610a2a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506131fe565b005b348015610a7057600080fd5b50610a9d60048036036020811015610a8757600080fd5b8101908080359060200190929190505050613384565b6040518082815260200191505060405180910390f35b348015610abf57600080fd5b50610b0260048036036020811015610ad657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061339c565b6040518082815260200191505060405180910390f35b610b4e60048036036040811015610b2e57600080fd5b8101908080359060200190929190803590602001909291905050506133b4565b005b348015610b5c57600080fd5b50610ba960048036036040811015610b7357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061365d565b005b348015610bb757600080fd5b50610be460048036036020811015610bce57600080fd5b81019080803590602001909291905050506139b4565b604051808215151515815260200191505060405180910390f35b348015610c0a57600080fd5b50610c4d60048036036020811015610c2157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506139d4565b604051808215151515815260200191505060405180910390f35b348015610c7357600080fd5b50610ca060048036036020811015610c8a57600080fd5b81019080803590602001909291905050506139f4565b60405180868152602001858152602001848152602001831515151581526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405180910390f35b348015610d0e57600080fd5b50610d7160048036036040811015610d2557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613a57565b604051808215151515815260200191505060405180910390f35b348015610d9757600080fd5b50610dc460048036036020811015610dae57600080fd5b8101908080359060200190929190505050613aeb565b005b610dcf826122ef565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e53576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806154c46021913960400191505060405180910390fd5b6008600084815260200190815260200160002060009054906101000a900460ff1615610ee7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f646f6720697320616c726561647920696e2061756374696f6e0000000000000081525060200191505060405180910390fd5b610eef6151fa565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505042816060018181525050828160400181815250508281608001818152505060008160a0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060016008600086815260200190815260200160002060006101000a81548160ff02191690831515021790555080600d600086815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061102192919061525c565b5060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050505050565b600081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561110057600080fd5b6002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806154816022913960400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061126757506112666001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633613a57565b5b61127057600080fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600d6020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905085565b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561146e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6164647265737320307830206973206e6f742076616c6964000000000000000081525060200191505060405180910390fd5b81600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156114dc57600080fd5b33838173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061154b57508173ffffffffffffffffffffffffffffffffffffffff1661153382611090565b73ffffffffffffffffffffffffffffffffffffffff16145b8061158f575061158e6001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683613a57565b5b61159857600080fd5b8673ffffffffffffffffffffffffffffffffffffffff166001600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461164f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806155d4602b913960400191505060405180910390fd5b60016000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555060016000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550856001600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050505050565b60096020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900460ff16908060010160029054906101000a900460ff16908060010160039054906101000a900460ff16905085565b600d60008281526020019081526020016000206004015434600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401116118b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260338152602001806153e96033913960400191505060405180910390fd5b426202a300600d600084815260200190815260200160002060030154011015611949576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f61756374696f6e2069732066696e69736865640000000000000000000000000081525060200191505060405180910390fd5b61199b34600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613c0c90919063ffffffff16565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600d60008381526020019081526020016000206004018190555050565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611adf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6164647265737320307830206973206e6f742076616c6964000000000000000081525060200191505060405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611b86576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806154c46021913960400191505060405180910390fd5b60001515600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514611c4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f6272656564657220616c7265616479207265676973746572656400000000000081525060200191505060405180910390fd5b6001600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b600115156009600084815260200190815260200160002060010160019054906101000a900460ff161515148015611d075750600015156009600083815260200190815260200160002060010160019054906101000a900460ff161515145b80611d6c5750600015156009600084815260200190815260200160002060010160019054906101000a900460ff161515148015611d6b5750600115156009600083815260200190815260200160002060010160019054906101000a900460ff161515145b5b611dc1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806155076026913960400191505060405180910390fd5b611dcb3383613c2b565b80611ddc5750611ddb3382613c2b565b5b611e31576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806155a8602c913960400191505060405180910390fd5b600a600083815260200190815260200160002060009054906101000a900460ff168015611e7b5750600a600082815260200190815260200160002060009054906101000a900460ff165b611ed0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806154e56022913960400191505060405180910390fd5b6000611edc8383613cff565b9050600060026009600085815260200190815260200160002060010160039054906101000a900460ff166009600087815260200190815260200160002060010160039054906101000a900460ff160160ff1681611f3557fe5b049050611f423385613c2b565b8015611f545750611f533384613c2b565b5b15611f6e57611f6833836001600085611f84565b50611f7e565b611f7c8260016000846140f0565b505b50505050565b600085600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561202a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6164647265737320307830206973206e6f742076616c6964000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146120cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f627265656465722061646472657373206973206e6f7420636f7272656374000081525060200191505060405180910390fd5b6006600081548092919060010191905055506120e56152e6565b6040518060a00160405280600654815260200188600881111561210457fe5b815260200187151581526020018660ff1681526020018560ff168152509050600b60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548160ff021916908360088111156121bc57fe5b021790555060408201518160010160016101000a81548160ff02191690831515021790555060608201518160010160026101000a81548160ff021916908360ff16021790555060808201518160010160036101000a81548160ff021916908360ff160217905550505050806009600060065481526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff0219169083600881111561226a57fe5b021790555060408201518160010160016101000a81548160ff02191690831515021790555060608201518160010160026101000a81548160ff021916908360ff16021790555060808201518160010160036101000a81548160ff021916908360ff1602179055509050506122e088600654614324565b60019250505095945050505050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156123c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6164647265737320307830206973206e6f742076616c6964000000000000000081525060200191505060405180910390fd5b6001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b3373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156124bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061545e6023913960400191505060405180910390fd5b600115156008600083815260200190815260200160002060009054906101000a900460ff16151514612556576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f646f67206973206e6f7420696e2061756374696f6e000000000000000000000081525060200191505060405180910390fd5b600d60008281526020019081526020016000206004015434116125c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d81526020018061552d602d913960400191505060405180910390fd5b426202a300600d600084815260200190815260200160002060030154011015612655576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f61756374696f6e2069732066696e69736865640000000000000000000000000081525060200191505060405180910390fd5b6000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146126ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806153b36036913960400191505060405180910390fd5b34600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600d60008281526020019081526020016000206001013390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505034600d60008381526020019081526020016000206004018190555050565b600081600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561286f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6164647265737320307830206973206e6f742076616c6964000000000000000081525060200191505060405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b3373ffffffffffffffffffffffffffffffffffffffff166128d6836122ef565b73ffffffffffffffffffffffffffffffffffffffff1614612942576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061541c6021913960400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16612962826122ef565b73ffffffffffffffffffffffffffffffffffffffff1614156129ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f5f6f70706f6e656e742063616e27742062652066726f6d2073656e646572000081525060200191505060405180910390fd5b600015156008600084815260200190815260200160002060009054906101000a900460ff161515148015612a445750600015156008600083815260200190815260200160002060009054906101000a900460ff161515145b612ab6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f646f6773206d757374206e6f7420626520696e2061756374696f6e000000000081525060200191505060405180910390fd5b60003411612b2c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f76616c7565206d757374206265207374726963746c7920706f7369746976650081525060200191505060405180910390fd5b80600f6000848152602001908152602001600020819055506000349050612b51615328565b6040518060a00160405280858152602001848152602001838152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152509050806010600086815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555060808201518160030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050505050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b612c72816122ef565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612cf6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806154c46021913960400191505060405180910390fd5b60001515600a600084815260200190815260200160002060009054906101000a900460ff16151514612d73576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061543d6021913960400191505060405180910390fd5b6001600a600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600a6020528060005260406000206000915054906101000a900460ff1681565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600d6000838152602001908152602001600020600401549050919050565b600b6020528160005260406000208181548110612e4157fe5b9060005260206000209060020201600091509150508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900460ff16908060010160029054906101000a900460ff16908060010160039054906101000a900460ff16905085565b600115156008600083815260200190815260200160002060009054906101000a900460ff16151514612f46576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f646f67206d75737420626520696e2061756374696f6e0000000000000000000081525060200191505060405180910390fd5b6202a300600d600083815260200190815260200160002060030154014211612fd6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f61756374696f6e206973206e6f742066696e697368656420796574000000000081525060200191505060405180910390fd5b600d600082815260200190815260200160002060040154600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146130a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f73656e646572206973206e6f74207468652077696e6e6572000000000000000081525060200191505060405180910390fd5b33600d600083815260200190815260200160002060050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506130fe81614542565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd613145836122ef565b33846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1580156131e357600080fd5b505af11580156131f7573d6000803e3d6000fd5b5050505050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613283576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806154a36021913960400191505060405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b600f6020528060005260406000206000915090505481565b600e6020528060005260406000206000915090505481565b3373ffffffffffffffffffffffffffffffffffffffff166133d4836122ef565b73ffffffffffffffffffffffffffffffffffffffff16146133f457600080fd5b81600f6000838152602001908152602001600020541461341357600080fd5b3460106000838152602001908152602001600020600201541461343557600080fd5b600015156010600083815260200190815260200160002060030160009054906101000a900460ff1615151461346957600080fd5b80600f60008481526020019081526020016000208190555060016010600083815260200190815260200160002060030160006101000a81548160ff02191690831515021790555060006134ba614856565b905060008160ff161415613592576134d1836122ef565b6010600084815260200190815260200160002060030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061352e836122ef565b73ffffffffffffffffffffffffffffffffffffffff166108fc60106000858152602001908152602001600020600201546002029081150290604051600060405180830381858888f1935050505015801561358c573d6000803e3d6000fd5b50613658565b61359b826122ef565b6010600084815260200190815260200160002060030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506135f8826122ef565b73ffffffffffffffffffffffffffffffffffffffff166108fc60106000858152602001908152602001600020600201546002029081150290604051600060405180830381858888f19350505050158015613656573d6000803e3d6000fd5b505b505050565b613666816122ef565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146136ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806154c46021913960400191505060405180910390fd5b600015156008600084815260200190815260200160002060009054906101000a900460ff16151514613767576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602981526020018061557f6029913960400191505060405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3385856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b15801561384457600080fd5b505af1158015613858573d6000803e3d6000fd5b5050505061386633836148e7565b600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206009600084815260200190815260200160002090806001815401808255809150509060018203906000526020600020906002020160009091929091909150600082015481600001556001820160009054906101000a900460ff168160010160006101000a81548160ff0219169083600881111561391e57fe5b02179055506001820160019054906101000a900460ff168160010160016101000a81548160ff0219169083151502179055506001820160029054906101000a900460ff168160010160026101000a81548160ff021916908360ff1602179055506001820160039054906101000a900460ff168160010160036101000a81548160ff021916908360ff160217905550505050505050565b60086020528060005260406000206000915054906101000a900460ff1681565b60076020528060005260406000206000915054906101000a900460ff1681565b60106020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905085565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b613af4816122ef565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614613b78576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806154c46021913960400191505060405180910390fd5b6000613b83836122ef565b9050613b8f3384614ccd565b600960008481526020019081526020016000206000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549060ff02191690556001820160026101000a81549060ff02191690556001820160036101000a81549060ff02191690555050613c0781846148e7565b505050565b600080828401905083811015613c2157600080fd5b8091505092915050565b600080905060008090505b600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015613cf55782600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110613ccb57fe5b9060005260206000209060020201600001541415613ce857600191505b8080600101915050613c36565b5080905092915050565b6000613d096152e6565b600960008581526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900460ff166008811115613d4f57fe5b6008811115613d5a57fe5b81526020016001820160019054906101000a900460ff161515151581526020016001820160029054906101000a900460ff1660ff1660ff1681526020016001820160039054906101000a900460ff1660ff1660ff16815250509050613dbd6152e6565b600960008581526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900460ff166008811115613e0357fe5b6008811115613e0e57fe5b81526020016001820160019054906101000a900460ff161515151581526020016001820160029054906101000a900460ff1660ff1660ff1681526020016001820160039054906101000a900460ff1660ff1660ff1681525050905060006008811115613e7657fe5b82602001516008811115613e8657fe5b148015613ead575060016008811115613e9b57fe5b81602001516008811115613eab57fe5b145b80613ef8575060016008811115613ec057fe5b82602001516008811115613ed057fe5b148015613ef7575060006008811115613ee557fe5b81602001516008811115613ef557fe5b145b5b15613f0657600592506140e5565b60016008811115613f1357fe5b82602001516008811115613f2357fe5b148015613f4a575060046008811115613f3857fe5b81602001516008811115613f4857fe5b145b80613f95575060046008811115613f5d57fe5b82602001516008811115613f6d57fe5b148015613f94575060016008811115613f8257fe5b81602001516008811115613f9257fe5b145b5b15613fa357600692506140e4565b60026008811115613fb057fe5b82602001516008811115613fc057fe5b148015613fe7575060036008811115613fd557fe5b81602001516008811115613fe557fe5b145b80614032575060036008811115613ffa57fe5b8260200151600881111561400a57fe5b14801561403157506002600881111561401f57fe5b8160200151600881111561402f57fe5b145b5b1561404057600192506140e3565b6000600881111561404d57fe5b8260200151600881111561405d57fe5b14801561408457506004600881111561407257fe5b8160200151600881111561408257fe5b145b806140cf57506004600881111561409757fe5b826020015160088111156140a757fe5b1480156140ce5750600060088111156140bc57fe5b816020015160088111156140cc57fe5b145b5b156140dd57600792506140e2565b600892505b5b5b5b829250505092915050565b6000803090506006600081548092919060010191905055506141106152e6565b6040518060a00160405280600654815260200188600881111561412f57fe5b815260200187151581526020018660ff1681526020018560ff168152509050600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548160ff021916908360088111156141e757fe5b021790555060408201518160010160016101000a81548160ff02191690831515021790555060608201518160010160026101000a81548160ff021916908360ff16021790555060808201518160010160036101000a81548160ff021916908360ff160217905550505050806009600060065481526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff0219169083600881111561429557fe5b021790555060408201518160010160016101000a81548160ff02191690831515021790555060608201518160010160026101000a81548160ff021916908360ff16021790555060808201518160010160036101000a81548160ff021916908360ff16021790555090505061430a600654614e8d565b61431682600654614324565b600192505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156143c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b6143d0816150ca565b15614443576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60008090505b600d6000838152602001908152602001600020600101805490508110156147d757600d600083815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600d600084815260200190815260200160002060010182815481106145d757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146147ca57600d6000838152602001908152602001600020600101818154811061463e57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600e6000600d600087815260200190815260200160002060010185815481106146a757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f19350505050158015614738573d6000803e3d6000fd5b506000600e6000600d6000868152602001908152602001600020600101848154811061476057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8080600101915050614548565b506000600e6000600d600085815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b600060024260115433604051602001808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140193505050506040516020818303038152906040528051906020012060001c816148cc57fe5b06905060116000815480929190600101919050555080905090565b600080905060008090506000600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905090505b83600b60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020848154811061498457fe5b906000526020600020906002020160000154146149a8578280600101935050614939565b60018103831415614a6b57600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106149fd57fe5b90600052602060002090600202016000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549060ff02191690556001820160026101000a81549060ff02191690556001820160036101000a81549060ff02191690555050614cbd565b8291505b60018103821015614c0657600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001830181548110614ac757fe5b9060005260206000209060020201600b60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110614b1f57fe5b9060005260206000209060020201600082015481600001556001820160009054906101000a900460ff168160010160006101000a81548160ff02191690836008811115614b6857fe5b02179055506001820160019054906101000a900460ff168160010160016101000a81548160ff0219169083151502179055506001820160029054906101000a900460ff168160010160026101000a81548160ff021916908360ff1602179055506001820160039054906101000a900460ff168160010160036101000a81548160ff021916908360ff1602179055509050508180600101925050614a6f565b600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001820381548110614c5357fe5b90600052602060002090600202016000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549060ff02191690556001820160026101000a81549060ff02191690556001820160036101000a81549060ff021916905550505b8080600190039150505050505050565b8173ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614614d84576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061555a6025913960400191505060405180910390fd5b614d8d8161513c565b60016000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555060006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008600082815260200190815260200160002060009054906101000a900460ff1615614f21576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f646f6720697320616c726561647920696e2061756374696f6e0000000000000081525060200191505060405180910390fd5b614f296151fa565b30816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050428160600181815250506001816040018181525050600081608001818152505060008160a0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060016008600084815260200190815260200160002060006101000a81548160ff02191690831515021790555080600d600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061505d92919061525c565b5060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050505050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146151f75760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b8280548282559060005260206000209081019282156152d5579160200282015b828111156152d45782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061527c565b5b5090506152e2919061536f565b5090565b6040518060a00160405280600081526020016000600881111561530557fe5b8152602001600015158152602001600060ff168152602001600060ff1681525090565b6040518060a00160405280600081526020016000815260200160008152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6153af91905b808211156153ab57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101615375565b5090565b9056fe6269646465722063616e6e6f7420626964206f6e207365766572616c2061756374696f6e7320696e207468652073616d652074696d657570646174656420626964206d757374206265207375706572696f7220746f2063757272656e742068696768657374206269645f6d79446f67206861766520746f206265206f776e65642062792073656e646572646f6720697320616c726561647920617661696c61626c6520746f206272656564746f6b656e206f776e65722063616e2774206265206d6573736167652073656e646572455243373231203a204f776e657220697320616c726561647920617070726f7665644552433732313a204f776e657220697320616c726561647920617070726f76656473656e646572206973206e6f742074686520636f72726563742061646472657373646f6773206861766520746f20626520617661696c61626c6520746f2062726565646e6f7420706f737369626c6520746f2062726565642073616d652073657820616e696d616c736d73672e76616c7565206d757374206265207375706572696f7220746f207468652068696768657374206269644552433732313a206275726e206f6620746f6b656e2074686174206973206e6f74206f776e63616e2774207472616e7366657220616e696d616c20776869636820697320696e2061756374696f6e6d6573736167652073656e646572206973206e6f74206f6e65206f662074686520746f6b656e206f776e65724552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e6564a265627a7a72315820d6590527127270788adebcf67912ead5fec179f663a5be7baddcff0635befd1c64736f6c634300050c0032",
  "sourceMap": "57:1797:0:-;;;712:12:4;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;712:12:4;702:7;;:22;;;;;;;;;;;;;;;;;;737:10;729:5;;:18;;;;;;;;;;;;;;;;;;57:1797:0;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "57:1797:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1029:394:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1029:394:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1029:394:1;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2052:142:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2052:142:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2052:142:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1357:388;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1357:388:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;143:43:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;143:43:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;143:43:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:439:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2365:439:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;352:37:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;352:37:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;352:37:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2039:382:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2039:382:1;;;;;;;;;;;;;;;;;:::i;:::-;;1128:207:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1128:207:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1128:207:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;303:866:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;303:866:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;303:866:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1342:445:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1342:445:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1342:445:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1185:162:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1185:162:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1185:162:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1436:598:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1436:598:1;;;;;;;;;;;;;;;;;:::i;:::-;;1035:140:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1035:140:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1035:140:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;349:602:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;349:602:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;175:55:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;175:55:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;175:55:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;99:196:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;99:196:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;99:196:2;;;;;;;;;;;;;;;;;:::i;:::-;;398:49:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;398:49:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;398:49:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1003:95;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1003:95:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;155:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;155:28:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;917:105:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;917:105:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;917:105:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;459:45:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;459:45:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;459:45:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2428:428:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2428:428:1;;;;;;;;;;;;;;;;;:::i;:::-;;1753:291:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1753:291:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1753:291:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;95:51:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;95:51:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;95:51:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;233:47:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;233:47:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;233:47:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;958:674:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;958:674:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2025:299:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2025:299:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2025:299:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;279:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;279:46:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;279:46:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;229:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;229:43:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;229:43:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;150::0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;150:43:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;150:43:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2202:151:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2202:151:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2202:151:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1794:220:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1794:220:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1794:220:4;;;;;;;;;;;;;;;;;:::i;:::-;;1029:394:1;1103:12;1111:3;1103:7;:12::i;:::-;456:8:5;442:22;;:10;:22;;;434:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1130:13:1;:18;1144:3;1130:18;;;;;;;;;;;;;;;;;;;;;1129:19;1121:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1183:18;;:::i;:::-;1224:10;1206:3;:15;;:28;;;;;;;;;;;1255:3;1239;:13;;:19;;;;;1283:14;1263:3;:17;;:34;;;;;1319:14;1302:3;:14;;:31;;;;;1359:1;1338:3;:10;;:23;;;;;;;;;;;1389:4;1368:13;:18;1382:3;1368:18;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;1413:3;1398:7;:12;1406:3;1398:12;;;;;;;;;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;513:1:5;1029:394:1;;;:::o;2052:142:5:-;2134:7;2110:8;765:1;734:33;;:11;:19;746:6;734:19;;;;;;;;;;;;;;;;;;;;;:33;;;;726:42;;;;;;2161:15;:25;2177:8;2161:25;;;;;;;;;;;;;;;;;;;;;2154:32;;2052:142;;;;:::o;1357:388::-;1460:10;1447:23;;:9;:23;;;;1439:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1553:10;1528:35;;:11;:21;1540:8;1528:21;;;;;;;;;;;;;;;;;;;;;:35;;;:90;;;;1567:51;1584:11;:21;1596:8;1584:21;;;;;;;;;;;;;;;;;;;;;1607:10;1567:16;:51::i;:::-;1528:90;1520:99;;;;;;1658:9;1630:15;:25;1646:8;1630:25;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;1728:8;1717:9;1685:52;;1694:11;:21;1706:8;1694:21;;;;;;;;;;;;;;;;;;;;;1685:52;;;;;;;;;;;;1357:388;;:::o;143:43:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2365:439:5:-;2467:3;615:1;595:22;;:8;:22;;;;586:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2484:8;765:1;734:33;;:11;:19;746:6;734:19;;;;;;;;;;;;;;;;;;;;;:33;;;;726:42;;;;;;2522:10;2534:8;896;882:22;;:10;:22;;;:59;;;;933:8;908:33;;:21;920:8;908:11;:21::i;:::-;:33;;;882:59;:112;;;;945:49;962:11;:21;974:8;962:21;;;;;;;;;;;;;;;;;;;;;985:8;945:16;:49::i;:::-;882:112;874:121;;;;;;2593:5;2570:28;;:11;:21;2582:8;2570:21;;;;;;;;;;;;;;;;;;;;;:28;;;2562:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2678:1;2657:10;:17;2668:5;2657:17;;;;;;;;;;;;;;;;:22;;;;;;;;;;;2709:1;2690:10;:15;2701:3;2690:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;2745:3;2721:11;:21;2733:8;2721:21;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;2787:8;2782:3;2766:30;;2775:5;2766:30;;;;;;;;;;;;779:1;;658;2365:439;;;;:::o;352:37:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2039:382:1:-;2139:7;:12;2147:3;2139:12;;;;;;;;;;;:23;;;2126:9;2100:11;:23;2112:10;2100:23;;;;;;;;;;;;;;;;:35;2099:63;2091:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2266:3;2256:6;2231:7;:12;2239:3;2231:12;;;;;;;;;;;:22;;;:31;:38;;2223:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2324:38;2352:9;2324:11;:23;2336:10;2324:23;;;;;;;;;;;;;;;;:27;;:38;;;;:::i;:::-;2298:11;:23;2310:10;2298:23;;;;;;;;;;;;;;;:64;;;;2393:11;:23;2405:10;2393:23;;;;;;;;;;;;;;;;2367:7;:12;2375:3;2367:12;;;;;;;;;;;:23;;:49;;;;2039:382;:::o;1128:207:4:-;1195:8;615:1:5;595:22;;:8;:22;;;;586:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1212:5:4;;;;;;;;;;;456:8:5;442:22;;:10;:22;;;434:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1259:5:4;1235:29;;:10;:20;1246:8;1235:20;;;;;;;;;;;;;;;;;;;;;;;;;:29;;;1227:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1326:4;1303:10;:20;1314:8;1303:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;658:1:5;1128:207:4;;:::o;303:866:2:-;406:4;378:32;;:8;:17;387:7;378:17;;;;;;;;;;;:24;;;;;;;;;;;;:32;;;:69;;;;;442:5;414:33;;:8;:17;423:7;414:17;;;;;;;;;;;:24;;;;;;;;;;;;:33;;;378:69;:142;;;;479:5;451:33;;:8;:17;460:7;451:17;;;;;;;;;;;:24;;;;;;;;;;;;:33;;;:69;;;;;516:4;488:32;;:8;:17;497:7;488:17;;;;;;;;;;;:24;;;;;;;;;;;;:32;;;451:69;378:142;370:193;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;576:28;584:10;596:7;576;:28::i;:::-;:60;;;;608:28;616:10;628:7;608;:28::i;:::-;576:60;568:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;698:16;:25;715:7;698:25;;;;;;;;;;;;;;;;;;;;;:54;;;;;727:16;:25;744:7;727:25;;;;;;;;;;;;;;;;;;;;;698:54;690:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;802:10;815:42;840:7;849;815:24;:42::i;:::-;802:55;;862:15;938:1;910:8;:17;919:7;910:17;;;;;;;;;;;:26;;;;;;;;;;;;881:8;:17;890:7;881:17;;;;;;;;;;;:26;;;;;;;;;;;;:55;880:59;;;;;;;;862:77;;949:28;957:10;969:7;949;:28::i;:::-;:60;;;;;981:28;989:10;1001:7;981;:28::i;:::-;949:60;946:217;;;1020:52;1034:10;1046:5;1053:4;1059:1;1062:9;1020:13;:52::i;:::-;;946:217;;;1104:51;1129:5;1136:4;1142:1;1145:9;1104:24;:51::i;:::-;;946:217;303:866;;;;:::o;1342:445:4:-;1489:4;1470:8;615:1:5;595:22;;:8;:22;;;;586:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1520:10:4;1508:22;;:8;:22;;;1500:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:7;;:9;;;;;;;;;;;;;1589:14;;:::i;:::-;1606:45;;;;;;;;1610:7;;1606:45;;;;1619:5;1606:45;;;;;;;;;;;;1626:7;1606:45;;;;;;1635:4;1606:45;;;;;;1641:9;1606:45;;;;;1589:62;;1661:11;:21;1673:8;1661:21;;;;;;;;;;;;;;;1688:3;1661:31;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1661:31:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1722:3;1702:8;:17;1711:7;;1702:17;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1737:24;1743:8;1753:7;;1737:5;:24::i;:::-;1778:4;1771:11;;;1342:445;;;;;;;;:::o;1185:162:5:-;1281:15;1244:11;:21;1256:8;1244:21;;;;;;;;;;;;;;;;;;;;;615:1;595:22;;:8;:22;;;;586:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1316:11;:21;1328:8;1316:21;;;;;;;;;;;;;;;;;;;;;1309:28;;1185:162;;;;:::o;1436:598:1:-;1517:10;1497:30;;:11;:16;1509:3;1497:16;;;;;;;;;;;;;;;;;;;;;:30;;;;1489:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1602:4;1580:26;;:13;:18;1594:3;1580:18;;;;;;;;;;;;;;;;;;;;;:26;;;1572:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1657:7;:12;1665:3;1657:12;;;;;;;;;;;:23;;;1645:9;:35;1637:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1778:3;1768:6;1743:7;:12;1751:3;1743:12;;;;;;;;;;;:22;;;:31;:38;;1735:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1845:1;1818:11;:23;1830:10;1818:23;;;;;;;;;;;;;;;;:28;1810:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1936:9;1910:11;:23;1922:10;1910:23;;;;;;;;;;;;;;;:35;;;;1950:7;:12;1958:3;1950:12;;;;;;;;;;;:20;;1976:10;1950:37;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1950:37:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2018:9;1992:7;:12;2000:3;1992:12;;;;;;;;;;;:23;;:35;;;;1436:598;:::o;1035:140:5:-;1120:7;1096:8;615:1;595:22;;:8;:22;;;;586:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1147:10;:20;1158:8;1147:20;;;;;;;;;;;;;;;;1140:27;;1035:140;;;;:::o;349:602:0:-;455:10;436:29;;:15;444:6;436:7;:15::i;:::-;:29;;;428:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;538:10;516:32;;:18;524:9;516:7;:18::i;:::-;:32;;;;508:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;621:5;596:30;;:13;:21;610:6;596:21;;;;;;;;;;;;;;;;;;;;;:30;;;:67;;;;;658:5;630:33;;:13;:24;644:9;630:24;;;;;;;;;;;;;;;;;;;;;:33;;;596:67;588:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;720:1;708:9;:13;700:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;789:9;762:16;:24;779:6;762:24;;;;;;;;;;;:36;;;;803:12;826:9;803:33;;841:18;;:::i;:::-;862:49;;;;;;;;868:6;862:49;;;;876:9;862:49;;;;887:4;862:49;;;;893:5;862:49;;;;;;908:1;862:49;;;;;841:70;;937:5;916:10;:18;927:6;916:18;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;349:602;;;;:::o;175:55:5:-;;;;;;;;;;;;;;;;;;;;;;:::o;99:196:2:-;153:15;161:6;153:7;:15::i;:::-;456:8:5;442:22;;:10;:22;;;434:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;211:5:2;183:33;;:16;:24;200:6;183:24;;;;;;;;;;;;;;;;;;;;;:33;;;175:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;286:4;259:16;:24;276:6;259:24;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;99:196;;:::o;398:49:4:-;;;;;;;;;;;;;;;;;;;;;;:::o;1003:95::-;1051:7;1080:4;1072:21;;;1065:28;;1003:95;:::o;155:28::-;;;;;;;;;;;;;:::o;917:105:1:-;974:7;994;:12;1002:3;994:12;;;;;;;;;;;:23;;;987:30;;917:105;;;:::o;459:45:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2428:428:1:-;2512:4;2490:26;;:13;:18;2504:3;2490:18;;;;;;;;;;;;;;;;;;;;;:26;;;2482:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2587:6;2562:7;:12;2570:3;2562:12;;;;;;;;;;;:22;;;:31;2556:3;:37;2548:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2665:7;:12;2673:3;2665:12;;;;;;;;;;;:23;;;2638:11;:23;2650:10;2638:23;;;;;;;;;;;;;;;;:50;2630:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2744:10;2722:7;:12;2730:3;2722:12;;;;;;;;;;;:19;;;:32;;;;;;;;;;;;;;;;;;2767:24;2787:3;2767:19;:24::i;:::-;2796:7;;;;;;;;;;;:20;;;2817:12;2825:3;2817:7;:12::i;:::-;2831:10;2843:3;2796:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2796:51:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2796:51:1;;;;2428:428;:::o;1753:291:5:-;1856:10;1843:23;;:9;:23;;;;1835:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1959:9;1915:18;:30;1934:10;1915:30;;;;;;;;;;;;;;;:41;1946:9;1915:41;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;2013:9;1986:48;;2001:10;1986:48;;;2024:9;1986:48;;;;;;;;;;;;;;;;;;;;;;1753:291;;:::o;95:51:0:-;;;;;;;;;;;;;;;;;:::o;233:47:1:-;;;;;;;;;;;;;;;;;:::o;958:674:0:-;1061:10;1042:29;;:15;1050:6;1042:7;:15::i;:::-;:29;;;1034:38;;;;;;1116:6;1085:16;:27;1102:9;1085:27;;;;;;;;;;;;:37;1077:46;;;;;;1172:9;1136:10;:21;1147:9;1136:21;;;;;;;;;;;:25;;;:46;1128:55;;;;;;1230:5;1196:39;;:10;:21;1207:9;1196:21;;;;;;;;;;;:30;;;;;;;;;;;;:39;;;1188:48;;;;;;1268:9;1241:16;:24;1258:6;1241:24;;;;;;;;;;;:36;;;;1315:4;1282:10;:21;1293:9;1282:21;;;;;;;;;;;:30;;;:37;;;;;;;;;;;;;;;;;;1326:10;1339:9;:7;:9::i;:::-;1326:22;;1366:1;1358:4;:9;;;1355:273;;;1410:15;1418:6;1410:7;:15::i;:::-;1379:10;:21;1390:9;1379:21;;;;;;;;;;;:28;;;:46;;;;;;;;;;;;;;;;;;1431:15;1439:6;1431:7;:15::i;:::-;:24;;:53;1458:10;:21;1469:9;1458:21;;;;;;;;;;;:25;;;1456:1;:27;1431:53;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1431:53:0;1355:273;;;1542:18;1550:9;1542:7;:18::i;:::-;1511:10;:21;1522:9;1511:21;;;;;;;;;;;:28;;;:49;;;;;;;;;;;;;;;;;;1566:18;1574:9;1566:7;:18::i;:::-;:27;;:56;1596:10;:21;1607:9;1596:21;;;;;;;;;;;:25;;;1594:1;:27;1566:56;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1566:56:0;1355:273;958:674;;;:::o;2025:299:4:-;2097:12;2105:3;2097:7;:12::i;:::-;456:8:5;442:22;;:10;:22;;;434:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2145:5:4;2123:27;;:13;:18;2137:3;2123:18;;;;;;;;;;;;;;;;;;;;;:27;;;2115:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2200:7;;;;;;;;;;;:20;;;2221:10;2233:3;2238;2200:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2200:42:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2200:42:4;;;;2246:32;2263:10;2274:3;2246:16;:32::i;:::-;2282:11;:16;2294:3;2282:16;;;;;;;;;;;;;;;2304:8;:13;2313:3;2304:13;;;;;;;;;;;2282:36;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2282:36:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2025:299;;;:::o;279:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;229:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;150::0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2202:151:5:-;2284:4;2308:18;:26;2327:6;2308:26;;;;;;;;;;;;;;;:37;2335:9;2308:37;;;;;;;;;;;;;;;;;;;;;;;;;2301:44;;2202:151;;;;:::o;1794:220:4:-;1843:17;1851:8;1843:7;:17::i;:::-;456:8:5;442:22;;:10;:22;;;434:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:18:4;1887:17;1895:8;1887:7;:17::i;:::-;1866:38;;1909:27;1915:10;1927:8;1909:5;:27::i;:::-;1948:8;:18;1957:8;1948:18;;;;;;;;;;;;1941:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1971:38;1988:10;2000:8;1971:16;:38::i;:::-;513:1:5;1794:220:4;;:::o;1321:136:8:-;1379:7;1395:9;1411:1;1407;:5;1395:17;;1432:1;1427;:6;;1419:15;;;;;;1450:1;1443:8;;;1321:136;;;;:::o;2613:277:4:-;2687:12;2716:5;2706:15;;2730:6;2739:1;2730:10;;2726:139;2744:11;:21;2756:8;2744:21;;;;;;;;;;;;;;;:28;;;;2742:1;:30;2726:139;;;2822:6;2791:11;:21;2803:8;2791:21;;;;;;;;;;;;;;;2813:1;2791:24;;;;;;;;;;;;;;;;;;:27;;;:37;2788:70;;;2847:4;2837:14;;2788:70;2774:3;;;;;;;2726:139;;;;2876:7;2869:14;;2613:277;;;;:::o;1178:911:2:-;1263:9;1278:16;;:::i;:::-;1297:8;:14;1306:4;1297:14;;;;;;;;;;;1278:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1316:16;;:::i;:::-;1335:8;:14;1344:4;1335:14;;;;;;;;;;;1316:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1374:13;1360:27;;;;;;;;:5;:10;;;:27;;;;;;;;;:57;;;;;1405:12;1391:26;;;;;;;;:5;:10;;;:26;;;;;;;;;1360:57;1359:122;;;;1437:12;1423:26;;;;;;;;:5;:10;;;:26;;;;;;;;;:57;;;;;1467:13;1453:27;;;;;;;;:5;:10;;;:27;;;;;;;;;1423:57;1359:122;1356:710;;;1499:13;1492:20;;1356:710;;;1545:12;1531:26;;;;;;;;:5;:10;;;:26;;;;;;;;;:54;;;;;1575:10;1561:24;;;;;;;;:5;:10;;;:24;;;;;;;;;1531:54;1530:116;;;;1605:10;1591:24;;;;;;;;:5;:10;;;:24;;;;;;;;;:54;;;;;1633:12;1619:26;;;;;;;;:5;:10;;;:26;;;;;;;;;1591:54;1530:116;1527:539;;;1664:11;1657:18;;1527:539;;;1708:12;1694:26;;;;;;;;:5;:10;;;:26;;;;;;;;;:56;;;;;1738:12;1724:26;;;;;;;;:5;:10;;;:26;;;;;;;;;1694:56;1693:120;;;;1770:12;1756:26;;;;;;;;:5;:10;;;:26;;;;;;;;;:56;;;;;1800:12;1786:26;;;;;;;;:5;:10;;;:26;;;;;;;;;1756:56;1693:120;1690:376;;;1831:12;1824:19;;1690:376;;;1876:13;1862:27;;;;;;;;:5;:10;;;:27;;;;;;;;;:55;;;;;1907:10;1893:24;;;;;;;;:5;:10;;;:24;;;;;;;;;1862:55;1861:118;;;;1937:10;1923:24;;;;;;;;:5;:10;;;:24;;;;;;;;;:55;;;;;1965:13;1951:27;;;;;;;;:5;:10;;;:27;;;;;;;;;1923:55;1861:118;1858:208;;;1997:19;1990:26;;1858:208;;;2048:12;2041:19;;1858:208;1690:376;1527:539;1356:710;2078:4;2071:11;;;;1178:911;;;;:::o;469:443:1:-;577:4;588:23;638:4;588:57;;650:7;;:9;;;;;;;;;;;;;669:14;;:::i;:::-;686:45;;;;;;;;690:7;;686:45;;;;699:5;686:45;;;;;;;;;;;;706:7;686:45;;;;;;715:4;686:45;;;;;;721:9;686:45;;;;;669:62;;741:11;:20;753:7;741:20;;;;;;;;;;;;;;;767:3;741:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;741:30:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;801:3;781:8;:17;790:7;;781:17;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;817:27;836:7;;817:18;:27::i;:::-;863:23;869:7;878;;863:5;:23::i;:::-;903:4;896:11;;;;469:443;;;;;;:::o;2826:327:5:-;2920:1;2906:16;;:2;:16;;;;2898:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2979:16;2987:7;2979;:16::i;:::-;2978:17;2970:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3064:2;3041:11;:20;3053:7;3041:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;3093:1;3077:10;:14;3088:2;3077:14;;;;;;;;;;;;;;;;:17;;;;;;;;;;;3137:7;3133:2;3112:33;;3129:1;3112:33;;;;;;;;;;;;2826:327;;:::o;3212:338:1:-;3269:6;3277:1;3269:9;;3265:240;3283:7;:12;3291:3;3283:12;;;;;;;;;;;:20;;:27;;;;3280:1;:30;3265:240;;;3352:7;:12;3360:3;3352:12;;;;;;;;;;;:19;;;;;;;;;;;;3325:46;;:7;:12;3333:3;3325:12;;;;;;;;;;;:20;;3346:1;3325:23;;;;;;;;;;;;;;;;;;;;;;;;;:46;;;3322:179;;3379:7;:12;3387:3;3379:12;;;;;;;;;;;:20;;3400:1;3379:23;;;;;;;;;;;;;;;;;;;;;;;;;:32;;:70;3412:11;:36;3424:7;:12;3432:3;3424:12;;;;;;;;;;;:20;;3445:1;3424:23;;;;;;;;;;;;;;;;;;;;;;;;;3412:36;;;;;;;;;;;;;;;;3379:70;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3379:70:1;3494:1;3455:11;:36;3467:7;:12;3475:3;3467:12;;;;;;;;;;;:20;;3488:1;3467:23;;;;;;;;;;;;;;;;;;;;;;;;;3455:36;;;;;;;;;;;;;;;:40;;;;3322:179;3312:3;;;;;;;3265:240;;;;3543:1;3508:11;:32;3520:7;:12;3528:3;3520:12;;;;;;;;;;;:19;;;;;;;;;;;;3508:32;;;;;;;;;;;;;;;:36;;;;3212:338;:::o;1645:201:0:-;1681:12;1794:1;1755:15;1772:6;;1780:10;1738:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1738:53:0;;;1728:64;;;;;;1720:73;;:75;;;;;;1705:91;;1806:6;;:8;;;;;;;;;;;;;1831:6;1824:13;;1645:201;:::o;2894:452:4:-;2969:6;2978:1;2969:10;;2986:6;2994:1;2986:9;;3002:11;3016;:23;3028:10;3016:23;;;;;;;;;;;;;;;:30;;;;3002:44;;3050:59;3089:3;3056:11;:23;3068:10;3056:23;;;;;;;;;;;;;;;3080:1;3056:26;;;;;;;;;;;;;;;;;;:29;;;:36;3050:59;;3101:3;;;;;;;3050:59;;;3127:1;3120:6;:8;3115:1;:13;3112:217;;;3141:11;:23;3153:10;3141:23;;;;;;;;;;;;;;;3165:1;3141:26;;;;;;;;;;;;;;;;;;;3134:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3112:217;;;3192:1;3190:3;;3186:93;3204:1;3197:6;:8;3195:1;:10;3186:93;;;3246:11;:23;3258:10;3246:23;;;;;;;;;;;;;;;3272:1;3270;:3;3246:28;;;;;;;;;;;;;;;;;;3217:11;:23;3229:10;3217:23;;;;;;;;;;;;;;;3241:1;3217:26;;;;;;;;;;;;;;;;;;:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3207:3;;;;;;;3186:93;;;3289:11;:23;3301:10;3289:23;;;;;;;;;;;;;;;3320:1;3313:6;:8;3289:33;;;;;;;;;;;;;;;;;;;3282:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3112:217;3332:8;;;;;;;;2894:452;;;;;:::o;3334:325:5:-;3434:6;3410:30;;:11;:20;3422:7;3410:20;;;;;;;;;;;;;;;;;;;;;:30;;;3402:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3495:23;3510:7;3495:14;:23::i;:::-;3551:1;3531:10;:18;3542:6;3531:18;;;;;;;;;;;;;;;;:21;;;;;;;;;;;3594:1;3563:11;:20;3575:7;3563:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;3643:7;3639:1;3614:37;;3623:6;3614:37;;;;;;;;;;;;3334:325;;:::o;2862:335:1:-;2927:13;:18;2941:3;2927:18;;;;;;;;;;;;;;;;;;;;;2926:19;2918:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2982:18;;:::i;:::-;3031:4;3005:3;:15;;:31;;;;;;;;;;;3057:3;3041;:13;;:19;;;;;3085:1;3065:3;:17;;:21;;;;;3108:1;3091:3;:14;;:18;;;;;3135:1;3114:3;:10;;:23;;;;;;;;;;;3165:4;3144:13;:18;3158:3;3144:18;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;3189:3;3174:7;:12;3182:3;3174:12;;;;;;;;;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2862:335;;:::o;3165:157:5:-;3222:4;3239:14;3256:11;:20;3268:7;3256:20;;;;;;;;;;;;;;;;;;;;;3239:37;;3312:1;3294:20;;:6;:20;;;;3287:27;;;3165:157;;;:::o;3671:170::-;3771:1;3735:38;;:15;:24;3751:7;3735:24;;;;;;;;;;;;;;;;;;;;;:38;;;3731:99;;3825:1;3790:15;:24;3806:7;3790:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;3731:99;3671:170;:::o;57:1797:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.12;\r\n\r\nimport \"./Breedding.sol\";\r\n\r\ncontract Arena is Breedding {\r\n\r\n\r\n\r\n\tmapping(uint256 => uint256) public fightProposition;\r\n\tmapping(uint256 => Fight) public fightsById; \r\n\r\n\t uint256 private _nonce;\r\n\r\n\r\n\r\n\tstruct Fight {\r\n\t\tuint256 dog1;\r\n\t\tuint256 dog2;\r\n\t\tuint256 bid;\r\n\t\tbool accepted;\r\n\t\taddress winner;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tfunction proposeToFight(uint256 _myDog, uint256 _opponent) public payable {\r\n\t\trequire(ownerOf(_myDog) == msg.sender, \"_myDog have to be owned by sender\");\r\n\t\trequire(ownerOf(_opponent) != msg.sender, \"_opponent can't be from sender\");\r\n\t\trequire(dogsInAuction[_myDog] == false && dogsInAuction[_opponent] == false, \"dogs must not be in auction\");\r\n\t\trequire(msg.value > 0, \"value must be strictly positive\");\r\n\t\tfightProposition[_myDog] = _opponent;\r\n\t\tuint256 _bid = uint256(msg.value);\r\n\t\tFight memory fight = Fight(_myDog, _opponent, _bid, false, address(0));\r\n\t\tfightsById[_myDog] = fight;\r\n\r\n\r\n\t}\r\n\r\n\r\n\tfunction agreeToFight(uint256 _myDog, uint256 _opponent) public payable{\r\n\t\trequire(ownerOf(_myDog) == msg.sender);\r\n\t\trequire(fightProposition[_opponent] == _myDog);\r\n\t\trequire(fightsById[_opponent].bid ==uint256(msg.value));\r\n\t\trequire(fightsById[_opponent].accepted == false);\r\n\t\tfightProposition[_myDog] = _opponent;\r\n\t\tfightsById[_opponent].accepted = true;\r\n\r\n\t\tuint8 rand = _random();\r\n\r\n\t\tif(rand == 0) \r\n\t\t{\r\n\t\t\tfightsById[_opponent].winner = ownerOf(_myDog);\r\n\t\t\townerOf(_myDog).transfer(2*fightsById[_opponent].bid);\r\n\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tfightsById[_opponent].winner = ownerOf(_opponent);\r\n\t\t\townerOf(_opponent).transfer(2*fightsById[_opponent].bid);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tfunction _random() private returns (uint8 random) {\r\n       random = uint8(uint256(keccak256(abi.encodePacked(block.timestamp, _nonce, msg.sender)))%2);\r\n       _nonce++;\r\n       return random;\r\n\r\n   }\r\n   \r\n}",
  "sourcePath": "C:\\Users\\cleme\\Desktop\\smart_contracts_ethereum\\TD6\\contracts\\Arena.sol",
  "ast": {
    "absolutePath": "/C/Users/cleme/Desktop/smart_contracts_ethereum/TD6/contracts/Arena.sol",
    "exportedSymbols": {
      "Arena": [
        250
      ]
    },
    "id": 251,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/C/Users/cleme/Desktop/smart_contracts_ethereum/TD6/contracts/Breedding.sol",
        "file": "./Breedding.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 251,
        "sourceUnit": 1072,
        "src": "28:25:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "Breedding",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1071,
              "src": "75:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Breedding_$1071",
                "typeString": "contract Breedding"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "75:9:0"
          }
        ],
        "contractDependencies": [
          764,
          1071,
          1493,
          1918,
          1998
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 250,
        "linearizedBaseContracts": [
          250,
          1071,
          764,
          1493,
          1918,
          1998
        ],
        "name": "Arena",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8,
            "name": "fightProposition",
            "nodeType": "VariableDeclaration",
            "scope": 250,
            "src": "95:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 7,
              "keyType": {
                "id": 5,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "103:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "95:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 6,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "114:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 12,
            "name": "fightsById",
            "nodeType": "VariableDeclaration",
            "scope": 250,
            "src": "150:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Fight_$25_storage_$",
              "typeString": "mapping(uint256 => struct Arena.Fight)"
            },
            "typeName": {
              "id": 11,
              "keyType": {
                "id": 9,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "158:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "150:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Fight_$25_storage_$",
                "typeString": "mapping(uint256 => struct Arena.Fight)"
              },
              "valueType": {
                "contractScope": null,
                "id": 10,
                "name": "Fight",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 25,
                "src": "169:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Fight_$25_storage_ptr",
                  "typeString": "struct Arena.Fight"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 14,
            "name": "_nonce",
            "nodeType": "VariableDeclaration",
            "scope": 250,
            "src": "201:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "201:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "Arena.Fight",
            "id": 25,
            "members": [
              {
                "constant": false,
                "id": 16,
                "name": "dog1",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "251:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "251:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "name": "dog2",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "268:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 17,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "268:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "name": "bid",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "285:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 19,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "285:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "name": "accepted",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "301:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 21,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "301:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "name": "winner",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "319:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 23,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "319:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Fight",
            "nodeType": "StructDefinition",
            "scope": 250,
            "src": "233:105:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "423:528:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 34,
                              "name": "_myDog",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "444:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 33,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1622
                            ],
                            "referencedDeclaration": 1622,
                            "src": "436:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_payable_$",
                              "typeString": "function (uint256) view returns (address payable)"
                            }
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "436:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 36,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2206,
                            "src": "455:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 37,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "455:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "436:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f6d79446f67206861766520746f206265206f776e65642062792073656e646572",
                        "id": 39,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "467:35:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_49632934b3b904cd30f00365f6cd03d818cac7b6d3fa29ac75a20de0d5ef5552",
                          "typeString": "literal_string \"_myDog have to be owned by sender\""
                        },
                        "value": "_myDog have to be owned by sender"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_49632934b3b904cd30f00365f6cd03d818cac7b6d3fa29ac75a20de0d5ef5552",
                          "typeString": "literal_string \"_myDog have to be owned by sender\""
                        }
                      ],
                      "id": 32,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2209,
                        2210
                      ],
                      "referencedDeclaration": 2210,
                      "src": "428:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "428:75:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "428:75:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 44,
                              "name": "_opponent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "524:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 43,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1622
                            ],
                            "referencedDeclaration": 1622,
                            "src": "516:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_payable_$",
                              "typeString": "function (uint256) view returns (address payable)"
                            }
                          },
                          "id": 45,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "516:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 46,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2206,
                            "src": "538:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "538:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "516:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f6f70706f6e656e742063616e27742062652066726f6d2073656e646572",
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "550:32:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ce4ed09796f5b1a28b52ba0e59095cbe1402cc24ecb1c889e624c401498b780",
                          "typeString": "literal_string \"_opponent can't be from sender\""
                        },
                        "value": "_opponent can't be from sender"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ce4ed09796f5b1a28b52ba0e59095cbe1402cc24ecb1c889e624c401498b780",
                          "typeString": "literal_string \"_opponent can't be from sender\""
                        }
                      ],
                      "id": 42,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2209,
                        2210
                      ],
                      "referencedDeclaration": 2210,
                      "src": "508:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "508:75:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "508:75:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 53,
                              "name": "dogsInAuction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1112,
                              "src": "596:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 55,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 54,
                              "name": "_myDog",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "610:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "596:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 56,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "621:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "596:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 58,
                              "name": "dogsInAuction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1112,
                              "src": "630:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 60,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 59,
                              "name": "_opponent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "644:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "630:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 61,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "658:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "630:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "596:67:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "646f6773206d757374206e6f7420626520696e2061756374696f6e",
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "665:29:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8158bd44fd9b3a27f889d78c169cd647bce9cfaa72cafec0cf98b793f344dd48",
                          "typeString": "literal_string \"dogs must not be in auction\""
                        },
                        "value": "dogs must not be in auction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8158bd44fd9b3a27f889d78c169cd647bce9cfaa72cafec0cf98b793f344dd48",
                          "typeString": "literal_string \"dogs must not be in auction\""
                        }
                      ],
                      "id": 52,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2209,
                        2210
                      ],
                      "referencedDeclaration": 2210,
                      "src": "588:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "588:107:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "588:107:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 68,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2206,
                            "src": "708:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "708:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "720:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "708:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "76616c7565206d757374206265207374726963746c7920706f736974697665",
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "723:33:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a068d04f5444803495aea8d0066531606c8f1aabcd0b9119c78a924a61ce7f47",
                          "typeString": "literal_string \"value must be strictly positive\""
                        },
                        "value": "value must be strictly positive"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a068d04f5444803495aea8d0066531606c8f1aabcd0b9119c78a924a61ce7f47",
                          "typeString": "literal_string \"value must be strictly positive\""
                        }
                      ],
                      "id": 67,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2209,
                        2210
                      ],
                      "referencedDeclaration": 2210,
                      "src": "700:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "700:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "700:57:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 75,
                        "name": "fightProposition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "762:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 77,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 76,
                        "name": "_myDog",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "779:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "762:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 78,
                      "name": "_opponent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "789:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "762:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "762:36:0"
                },
                {
                  "assignments": [
                    82
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82,
                      "name": "_bid",
                      "nodeType": "VariableDeclaration",
                      "scope": 106,
                      "src": "803:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "803:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 87,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 84,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2206,
                          "src": "826:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "826:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "818:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint256"
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "818:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "803:33:0"
                },
                {
                  "assignments": [
                    89
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89,
                      "name": "fight",
                      "nodeType": "VariableDeclaration",
                      "scope": 106,
                      "src": "841:18:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fight_$25_memory_ptr",
                        "typeString": "struct Arena.Fight"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 88,
                        "name": "Fight",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 25,
                        "src": "841:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fight_$25_storage_ptr",
                          "typeString": "struct Arena.Fight"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 99,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 91,
                        "name": "_myDog",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "868:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 92,
                        "name": "_opponent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "876:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 93,
                        "name": "_bid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "887:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "893:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 96,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "908:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "900:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "900:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 90,
                      "name": "Fight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "862:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Fight_$25_storage_ptr_$",
                        "typeString": "type(struct Arena.Fight storage pointer)"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "862:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fight_$25_memory",
                      "typeString": "struct Arena.Fight memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "841:70:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 100,
                        "name": "fightsById",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "916:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Fight_$25_storage_$",
                          "typeString": "mapping(uint256 => struct Arena.Fight storage ref)"
                        }
                      },
                      "id": 102,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 101,
                        "name": "_myDog",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "927:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "916:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fight_$25_storage",
                        "typeString": "struct Arena.Fight storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 103,
                      "name": "fight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "937:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fight_$25_memory_ptr",
                        "typeString": "struct Arena.Fight memory"
                      }
                    },
                    "src": "916:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fight_$25_storage",
                      "typeString": "struct Arena.Fight storage ref"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "916:26:0"
                }
              ]
            },
            "documentation": null,
            "id": 107,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proposeToFight",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "name": "_myDog",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "373:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "373:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "name": "_opponent",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "389:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "389:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "372:35:0"
            },
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "423:0:0"
            },
            "scope": 250,
            "src": "349:602:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "1029:603:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 116,
                              "name": "_myDog",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "1050:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 115,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1622
                            ],
                            "referencedDeclaration": 1622,
                            "src": "1042:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_payable_$",
                              "typeString": "function (uint256) view returns (address payable)"
                            }
                          },
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1042:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 118,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2206,
                            "src": "1061:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1061:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1042:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2209,
                        2210
                      ],
                      "referencedDeclaration": 2209,
                      "src": "1034:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1034:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "1034:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 124,
                            "name": "fightProposition",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "1085:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 126,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 125,
                            "name": "_opponent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "1102:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1085:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 127,
                          "name": "_myDog",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "1116:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1085:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2209,
                        2210
                      ],
                      "referencedDeclaration": 2209,
                      "src": "1077:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1077:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "1077:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 132,
                              "name": "fightsById",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "1136:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Fight_$25_storage_$",
                                "typeString": "mapping(uint256 => struct Arena.Fight storage ref)"
                              }
                            },
                            "id": 134,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 133,
                              "name": "_opponent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "1147:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1136:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fight_$25_storage",
                              "typeString": "struct Arena.Fight storage ref"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "1136:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 137,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2206,
                                "src": "1172:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1172:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1164:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint256"
                          },
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1164:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1136:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2209,
                        2210
                      ],
                      "referencedDeclaration": 2209,
                      "src": "1128:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1128:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "1128:55:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 144,
                              "name": "fightsById",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "1196:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Fight_$25_storage_$",
                                "typeString": "mapping(uint256 => struct Arena.Fight storage ref)"
                              }
                            },
                            "id": 146,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 145,
                              "name": "_opponent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "1207:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1196:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fight_$25_storage",
                              "typeString": "struct Arena.Fight storage ref"
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "accepted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22,
                          "src": "1196:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1230:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1196:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2209,
                        2210
                      ],
                      "referencedDeclaration": 2209,
                      "src": "1188:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1188:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "1188:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 152,
                        "name": "fightProposition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1241:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 154,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 153,
                        "name": "_myDog",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "1258:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1241:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 155,
                      "name": "_opponent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "1268:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1241:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "1241:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 158,
                          "name": "fightsById",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "1282:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Fight_$25_storage_$",
                            "typeString": "mapping(uint256 => struct Arena.Fight storage ref)"
                          }
                        },
                        "id": 160,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 159,
                          "name": "_opponent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "1293:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1282:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fight_$25_storage",
                          "typeString": "struct Arena.Fight storage ref"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "accepted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "1282:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1315:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1282:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "1282:37:0"
                },
                {
                  "assignments": [
                    166
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 166,
                      "name": "rand",
                      "nodeType": "VariableDeclaration",
                      "scope": 218,
                      "src": "1326:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 165,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1326:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 169,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 167,
                      "name": "_random",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 249,
                      "src": "1339:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint8_$",
                        "typeString": "function () returns (uint8)"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1339:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1326:22:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 170,
                      "name": "rand",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "1358:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1366:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1358:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 216,
                    "nodeType": "Block",
                    "src": "1505:123:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 195,
                                "name": "fightsById",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12,
                                "src": "1511:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Fight_$25_storage_$",
                                  "typeString": "mapping(uint256 => struct Arena.Fight storage ref)"
                                }
                              },
                              "id": 197,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 196,
                                "name": "_opponent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 111,
                                "src": "1522:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1511:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Fight_$25_storage",
                                "typeString": "struct Arena.Fight storage ref"
                              }
                            },
                            "id": 198,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "winner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24,
                            "src": "1511:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 200,
                                "name": "_opponent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 111,
                                "src": "1550:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 199,
                              "name": "ownerOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                1622
                              ],
                              "referencedDeclaration": 1622,
                              "src": "1542:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_payable_$",
                                "typeString": "function (uint256) view returns (address payable)"
                              }
                            },
                            "id": 201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1542:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1511:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 203,
                        "nodeType": "ExpressionStatement",
                        "src": "1511:49:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1594:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 209,
                                    "name": "fightsById",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12,
                                    "src": "1596:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Fight_$25_storage_$",
                                      "typeString": "mapping(uint256 => struct Arena.Fight storage ref)"
                                    }
                                  },
                                  "id": 211,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 210,
                                    "name": "_opponent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 111,
                                    "src": "1607:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1596:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Fight_$25_storage",
                                    "typeString": "struct Arena.Fight storage ref"
                                  }
                                },
                                "id": 212,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "bid",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 20,
                                "src": "1596:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1594:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 205,
                                  "name": "_opponent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 111,
                                  "src": "1574:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 204,
                                "name": "ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  1622
                                ],
                                "referencedDeclaration": 1622,
                                "src": "1566:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_payable_$",
                                  "typeString": "function (uint256) view returns (address payable)"
                                }
                              },
                              "id": 206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1566:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1566:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1566:56:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 215,
                        "nodeType": "ExpressionStatement",
                        "src": "1566:56:0"
                      }
                    ]
                  },
                  "id": 217,
                  "nodeType": "IfStatement",
                  "src": "1355:273:0",
                  "trueBody": {
                    "id": 194,
                    "nodeType": "Block",
                    "src": "1373:119:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 173,
                                "name": "fightsById",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12,
                                "src": "1379:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Fight_$25_storage_$",
                                  "typeString": "mapping(uint256 => struct Arena.Fight storage ref)"
                                }
                              },
                              "id": 175,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 174,
                                "name": "_opponent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 111,
                                "src": "1390:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1379:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Fight_$25_storage",
                                "typeString": "struct Arena.Fight storage ref"
                              }
                            },
                            "id": 176,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "winner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24,
                            "src": "1379:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 178,
                                "name": "_myDog",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 109,
                                "src": "1418:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 177,
                              "name": "ownerOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                1622
                              ],
                              "referencedDeclaration": 1622,
                              "src": "1410:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_payable_$",
                                "typeString": "function (uint256) view returns (address payable)"
                              }
                            },
                            "id": 179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1410:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1379:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 181,
                        "nodeType": "ExpressionStatement",
                        "src": "1379:46:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 186,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1456:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 187,
                                    "name": "fightsById",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12,
                                    "src": "1458:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Fight_$25_storage_$",
                                      "typeString": "mapping(uint256 => struct Arena.Fight storage ref)"
                                    }
                                  },
                                  "id": 189,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 188,
                                    "name": "_opponent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 111,
                                    "src": "1469:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1458:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Fight_$25_storage",
                                    "typeString": "struct Arena.Fight storage ref"
                                  }
                                },
                                "id": 190,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "bid",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 20,
                                "src": "1458:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1456:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 183,
                                  "name": "_myDog",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 109,
                                  "src": "1439:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 182,
                                "name": "ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  1622
                                ],
                                "referencedDeclaration": 1622,
                                "src": "1431:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_payable_$",
                                  "typeString": "function (uint256) view returns (address payable)"
                                }
                              },
                              "id": 184,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1431:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1431:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1431:53:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 193,
                        "nodeType": "ExpressionStatement",
                        "src": "1431:53:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 219,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "agreeToFight",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "name": "_myDog",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "980:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "980:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 111,
                  "name": "_opponent",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "996:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "996:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "979:35:0"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1029:0:0"
            },
            "scope": 250,
            "src": "958:674:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 248,
              "nodeType": "Block",
              "src": "1695:151:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 224,
                      "name": "random",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 222,
                      "src": "1705:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 230,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2196,
                                          "src": "1755:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 231,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "1755:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "id": 232,
                                        "name": "_nonce",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 14,
                                        "src": "1772:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 233,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2206,
                                          "src": "1780:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 234,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "1780:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 228,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2193,
                                        "src": "1738:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 229,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "1738:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 235,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1738:53:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 227,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2200,
                                  "src": "1728:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 236,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1728:64:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1720:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1720:73:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1794:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "1720:75:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1714:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": "uint8"
                      },
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1714:82:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1705:91:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "1705:91:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1806:8:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 243,
                      "name": "_nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1806:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "1806:8:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 246,
                    "name": "random",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 222,
                    "src": "1831:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 223,
                  "id": 247,
                  "nodeType": "Return",
                  "src": "1824:13:0"
                }
              ]
            },
            "documentation": null,
            "id": 249,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_random",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1661:2:0"
            },
            "returnParameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 222,
                  "name": "random",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "1681:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1681:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1680:14:0"
            },
            "scope": 250,
            "src": "1645:201:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 251,
        "src": "57:1797:0"
      }
    ],
    "src": "0:1854:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/cleme/Desktop/smart_contracts_ethereum/TD6/contracts/Arena.sol",
    "exportedSymbols": {
      "Arena": [
        250
      ]
    },
    "id": 251,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/C/Users/cleme/Desktop/smart_contracts_ethereum/TD6/contracts/Breedding.sol",
        "file": "./Breedding.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 251,
        "sourceUnit": 1072,
        "src": "28:25:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "Breedding",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1071,
              "src": "75:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Breedding_$1071",
                "typeString": "contract Breedding"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "75:9:0"
          }
        ],
        "contractDependencies": [
          764,
          1071,
          1493,
          1918,
          1998
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 250,
        "linearizedBaseContracts": [
          250,
          1071,
          764,
          1493,
          1918,
          1998
        ],
        "name": "Arena",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8,
            "name": "fightProposition",
            "nodeType": "VariableDeclaration",
            "scope": 250,
            "src": "95:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 7,
              "keyType": {
                "id": 5,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "103:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "95:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 6,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "114:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 12,
            "name": "fightsById",
            "nodeType": "VariableDeclaration",
            "scope": 250,
            "src": "150:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Fight_$25_storage_$",
              "typeString": "mapping(uint256 => struct Arena.Fight)"
            },
            "typeName": {
              "id": 11,
              "keyType": {
                "id": 9,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "158:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "150:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Fight_$25_storage_$",
                "typeString": "mapping(uint256 => struct Arena.Fight)"
              },
              "valueType": {
                "contractScope": null,
                "id": 10,
                "name": "Fight",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 25,
                "src": "169:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Fight_$25_storage_ptr",
                  "typeString": "struct Arena.Fight"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 14,
            "name": "_nonce",
            "nodeType": "VariableDeclaration",
            "scope": 250,
            "src": "201:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "201:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "Arena.Fight",
            "id": 25,
            "members": [
              {
                "constant": false,
                "id": 16,
                "name": "dog1",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "251:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "251:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "name": "dog2",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "268:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 17,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "268:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "name": "bid",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "285:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 19,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "285:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "name": "accepted",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "301:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 21,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "301:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "name": "winner",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "319:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 23,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "319:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Fight",
            "nodeType": "StructDefinition",
            "scope": 250,
            "src": "233:105:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "423:528:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 34,
                              "name": "_myDog",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "444:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 33,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1622
                            ],
                            "referencedDeclaration": 1622,
                            "src": "436:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_payable_$",
                              "typeString": "function (uint256) view returns (address payable)"
                            }
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "436:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 36,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2206,
                            "src": "455:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 37,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "455:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "436:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f6d79446f67206861766520746f206265206f776e65642062792073656e646572",
                        "id": 39,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "467:35:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_49632934b3b904cd30f00365f6cd03d818cac7b6d3fa29ac75a20de0d5ef5552",
                          "typeString": "literal_string \"_myDog have to be owned by sender\""
                        },
                        "value": "_myDog have to be owned by sender"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_49632934b3b904cd30f00365f6cd03d818cac7b6d3fa29ac75a20de0d5ef5552",
                          "typeString": "literal_string \"_myDog have to be owned by sender\""
                        }
                      ],
                      "id": 32,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2209,
                        2210
                      ],
                      "referencedDeclaration": 2210,
                      "src": "428:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "428:75:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "428:75:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 44,
                              "name": "_opponent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "524:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 43,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1622
                            ],
                            "referencedDeclaration": 1622,
                            "src": "516:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_payable_$",
                              "typeString": "function (uint256) view returns (address payable)"
                            }
                          },
                          "id": 45,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "516:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 46,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2206,
                            "src": "538:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "538:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "516:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f6f70706f6e656e742063616e27742062652066726f6d2073656e646572",
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "550:32:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ce4ed09796f5b1a28b52ba0e59095cbe1402cc24ecb1c889e624c401498b780",
                          "typeString": "literal_string \"_opponent can't be from sender\""
                        },
                        "value": "_opponent can't be from sender"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ce4ed09796f5b1a28b52ba0e59095cbe1402cc24ecb1c889e624c401498b780",
                          "typeString": "literal_string \"_opponent can't be from sender\""
                        }
                      ],
                      "id": 42,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2209,
                        2210
                      ],
                      "referencedDeclaration": 2210,
                      "src": "508:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "508:75:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "508:75:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 53,
                              "name": "dogsInAuction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1112,
                              "src": "596:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 55,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 54,
                              "name": "_myDog",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "610:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "596:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 56,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "621:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "596:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 58,
                              "name": "dogsInAuction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1112,
                              "src": "630:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 60,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 59,
                              "name": "_opponent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "644:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "630:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 61,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "658:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "630:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "596:67:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "646f6773206d757374206e6f7420626520696e2061756374696f6e",
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "665:29:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8158bd44fd9b3a27f889d78c169cd647bce9cfaa72cafec0cf98b793f344dd48",
                          "typeString": "literal_string \"dogs must not be in auction\""
                        },
                        "value": "dogs must not be in auction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8158bd44fd9b3a27f889d78c169cd647bce9cfaa72cafec0cf98b793f344dd48",
                          "typeString": "literal_string \"dogs must not be in auction\""
                        }
                      ],
                      "id": 52,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2209,
                        2210
                      ],
                      "referencedDeclaration": 2210,
                      "src": "588:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "588:107:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "588:107:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 68,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2206,
                            "src": "708:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "708:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "720:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "708:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "76616c7565206d757374206265207374726963746c7920706f736974697665",
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "723:33:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a068d04f5444803495aea8d0066531606c8f1aabcd0b9119c78a924a61ce7f47",
                          "typeString": "literal_string \"value must be strictly positive\""
                        },
                        "value": "value must be strictly positive"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a068d04f5444803495aea8d0066531606c8f1aabcd0b9119c78a924a61ce7f47",
                          "typeString": "literal_string \"value must be strictly positive\""
                        }
                      ],
                      "id": 67,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2209,
                        2210
                      ],
                      "referencedDeclaration": 2210,
                      "src": "700:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "700:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "700:57:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 75,
                        "name": "fightProposition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "762:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 77,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 76,
                        "name": "_myDog",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "779:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "762:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 78,
                      "name": "_opponent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "789:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "762:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "762:36:0"
                },
                {
                  "assignments": [
                    82
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82,
                      "name": "_bid",
                      "nodeType": "VariableDeclaration",
                      "scope": 106,
                      "src": "803:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "803:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 87,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 84,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2206,
                          "src": "826:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "826:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "818:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint256"
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "818:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "803:33:0"
                },
                {
                  "assignments": [
                    89
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89,
                      "name": "fight",
                      "nodeType": "VariableDeclaration",
                      "scope": 106,
                      "src": "841:18:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fight_$25_memory_ptr",
                        "typeString": "struct Arena.Fight"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 88,
                        "name": "Fight",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 25,
                        "src": "841:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fight_$25_storage_ptr",
                          "typeString": "struct Arena.Fight"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 99,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 91,
                        "name": "_myDog",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "868:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 92,
                        "name": "_opponent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "876:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 93,
                        "name": "_bid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "887:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "893:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 96,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "908:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "900:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "900:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 90,
                      "name": "Fight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "862:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Fight_$25_storage_ptr_$",
                        "typeString": "type(struct Arena.Fight storage pointer)"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "862:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fight_$25_memory",
                      "typeString": "struct Arena.Fight memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "841:70:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 100,
                        "name": "fightsById",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "916:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Fight_$25_storage_$",
                          "typeString": "mapping(uint256 => struct Arena.Fight storage ref)"
                        }
                      },
                      "id": 102,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 101,
                        "name": "_myDog",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "927:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "916:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fight_$25_storage",
                        "typeString": "struct Arena.Fight storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 103,
                      "name": "fight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "937:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fight_$25_memory_ptr",
                        "typeString": "struct Arena.Fight memory"
                      }
                    },
                    "src": "916:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fight_$25_storage",
                      "typeString": "struct Arena.Fight storage ref"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "916:26:0"
                }
              ]
            },
            "documentation": null,
            "id": 107,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proposeToFight",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "name": "_myDog",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "373:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "373:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "name": "_opponent",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "389:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "389:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "372:35:0"
            },
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "423:0:0"
            },
            "scope": 250,
            "src": "349:602:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "1029:603:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 116,
                              "name": "_myDog",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "1050:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 115,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1622
                            ],
                            "referencedDeclaration": 1622,
                            "src": "1042:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_payable_$",
                              "typeString": "function (uint256) view returns (address payable)"
                            }
                          },
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1042:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 118,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2206,
                            "src": "1061:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1061:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1042:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2209,
                        2210
                      ],
                      "referencedDeclaration": 2209,
                      "src": "1034:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1034:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "1034:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 124,
                            "name": "fightProposition",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "1085:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 126,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 125,
                            "name": "_opponent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "1102:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1085:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 127,
                          "name": "_myDog",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "1116:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1085:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2209,
                        2210
                      ],
                      "referencedDeclaration": 2209,
                      "src": "1077:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1077:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "1077:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 132,
                              "name": "fightsById",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "1136:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Fight_$25_storage_$",
                                "typeString": "mapping(uint256 => struct Arena.Fight storage ref)"
                              }
                            },
                            "id": 134,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 133,
                              "name": "_opponent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "1147:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1136:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fight_$25_storage",
                              "typeString": "struct Arena.Fight storage ref"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "1136:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 137,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2206,
                                "src": "1172:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1172:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1164:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint256"
                          },
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1164:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1136:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2209,
                        2210
                      ],
                      "referencedDeclaration": 2209,
                      "src": "1128:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1128:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "1128:55:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 144,
                              "name": "fightsById",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "1196:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Fight_$25_storage_$",
                                "typeString": "mapping(uint256 => struct Arena.Fight storage ref)"
                              }
                            },
                            "id": 146,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 145,
                              "name": "_opponent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "1207:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1196:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fight_$25_storage",
                              "typeString": "struct Arena.Fight storage ref"
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "accepted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22,
                          "src": "1196:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1230:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1196:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2209,
                        2210
                      ],
                      "referencedDeclaration": 2209,
                      "src": "1188:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1188:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "1188:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 152,
                        "name": "fightProposition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1241:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 154,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 153,
                        "name": "_myDog",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "1258:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1241:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 155,
                      "name": "_opponent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "1268:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1241:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "1241:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 158,
                          "name": "fightsById",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "1282:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Fight_$25_storage_$",
                            "typeString": "mapping(uint256 => struct Arena.Fight storage ref)"
                          }
                        },
                        "id": 160,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 159,
                          "name": "_opponent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "1293:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1282:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fight_$25_storage",
                          "typeString": "struct Arena.Fight storage ref"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "accepted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "1282:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1315:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1282:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "1282:37:0"
                },
                {
                  "assignments": [
                    166
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 166,
                      "name": "rand",
                      "nodeType": "VariableDeclaration",
                      "scope": 218,
                      "src": "1326:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 165,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1326:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 169,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 167,
                      "name": "_random",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 249,
                      "src": "1339:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint8_$",
                        "typeString": "function () returns (uint8)"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1339:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1326:22:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 170,
                      "name": "rand",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "1358:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1366:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1358:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 216,
                    "nodeType": "Block",
                    "src": "1505:123:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 195,
                                "name": "fightsById",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12,
                                "src": "1511:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Fight_$25_storage_$",
                                  "typeString": "mapping(uint256 => struct Arena.Fight storage ref)"
                                }
                              },
                              "id": 197,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 196,
                                "name": "_opponent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 111,
                                "src": "1522:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1511:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Fight_$25_storage",
                                "typeString": "struct Arena.Fight storage ref"
                              }
                            },
                            "id": 198,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "winner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24,
                            "src": "1511:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 200,
                                "name": "_opponent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 111,
                                "src": "1550:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 199,
                              "name": "ownerOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                1622
                              ],
                              "referencedDeclaration": 1622,
                              "src": "1542:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_payable_$",
                                "typeString": "function (uint256) view returns (address payable)"
                              }
                            },
                            "id": 201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1542:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1511:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 203,
                        "nodeType": "ExpressionStatement",
                        "src": "1511:49:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1594:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 209,
                                    "name": "fightsById",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12,
                                    "src": "1596:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Fight_$25_storage_$",
                                      "typeString": "mapping(uint256 => struct Arena.Fight storage ref)"
                                    }
                                  },
                                  "id": 211,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 210,
                                    "name": "_opponent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 111,
                                    "src": "1607:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1596:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Fight_$25_storage",
                                    "typeString": "struct Arena.Fight storage ref"
                                  }
                                },
                                "id": 212,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "bid",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 20,
                                "src": "1596:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1594:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 205,
                                  "name": "_opponent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 111,
                                  "src": "1574:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 204,
                                "name": "ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  1622
                                ],
                                "referencedDeclaration": 1622,
                                "src": "1566:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_payable_$",
                                  "typeString": "function (uint256) view returns (address payable)"
                                }
                              },
                              "id": 206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1566:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1566:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1566:56:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 215,
                        "nodeType": "ExpressionStatement",
                        "src": "1566:56:0"
                      }
                    ]
                  },
                  "id": 217,
                  "nodeType": "IfStatement",
                  "src": "1355:273:0",
                  "trueBody": {
                    "id": 194,
                    "nodeType": "Block",
                    "src": "1373:119:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 173,
                                "name": "fightsById",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12,
                                "src": "1379:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Fight_$25_storage_$",
                                  "typeString": "mapping(uint256 => struct Arena.Fight storage ref)"
                                }
                              },
                              "id": 175,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 174,
                                "name": "_opponent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 111,
                                "src": "1390:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1379:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Fight_$25_storage",
                                "typeString": "struct Arena.Fight storage ref"
                              }
                            },
                            "id": 176,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "winner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24,
                            "src": "1379:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 178,
                                "name": "_myDog",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 109,
                                "src": "1418:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 177,
                              "name": "ownerOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                1622
                              ],
                              "referencedDeclaration": 1622,
                              "src": "1410:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_payable_$",
                                "typeString": "function (uint256) view returns (address payable)"
                              }
                            },
                            "id": 179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1410:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1379:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 181,
                        "nodeType": "ExpressionStatement",
                        "src": "1379:46:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 186,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1456:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 187,
                                    "name": "fightsById",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12,
                                    "src": "1458:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Fight_$25_storage_$",
                                      "typeString": "mapping(uint256 => struct Arena.Fight storage ref)"
                                    }
                                  },
                                  "id": 189,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 188,
                                    "name": "_opponent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 111,
                                    "src": "1469:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1458:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Fight_$25_storage",
                                    "typeString": "struct Arena.Fight storage ref"
                                  }
                                },
                                "id": 190,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "bid",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 20,
                                "src": "1458:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1456:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 183,
                                  "name": "_myDog",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 109,
                                  "src": "1439:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 182,
                                "name": "ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  1622
                                ],
                                "referencedDeclaration": 1622,
                                "src": "1431:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_payable_$",
                                  "typeString": "function (uint256) view returns (address payable)"
                                }
                              },
                              "id": 184,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1431:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1431:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1431:53:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 193,
                        "nodeType": "ExpressionStatement",
                        "src": "1431:53:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 219,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "agreeToFight",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "name": "_myDog",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "980:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "980:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 111,
                  "name": "_opponent",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "996:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "996:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "979:35:0"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1029:0:0"
            },
            "scope": 250,
            "src": "958:674:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 248,
              "nodeType": "Block",
              "src": "1695:151:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 224,
                      "name": "random",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 222,
                      "src": "1705:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 230,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2196,
                                          "src": "1755:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 231,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "1755:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "id": 232,
                                        "name": "_nonce",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 14,
                                        "src": "1772:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 233,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2206,
                                          "src": "1780:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 234,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "1780:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 228,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2193,
                                        "src": "1738:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 229,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "1738:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 235,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1738:53:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 227,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2200,
                                  "src": "1728:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 236,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1728:64:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1720:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1720:73:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1794:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "1720:75:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1714:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": "uint8"
                      },
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1714:82:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1705:91:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "1705:91:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1806:8:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 243,
                      "name": "_nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1806:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "1806:8:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 246,
                    "name": "random",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 222,
                    "src": "1831:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 223,
                  "id": 247,
                  "nodeType": "Return",
                  "src": "1824:13:0"
                }
              ]
            },
            "documentation": null,
            "id": 249,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_random",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1661:2:0"
            },
            "returnParameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 222,
                  "name": "random",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "1681:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1681:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1680:14:0"
            },
            "scope": 250,
            "src": "1645:201:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 251,
        "src": "57:1797:0"
      }
    ],
    "src": "0:1854:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "_approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "_operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "_approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        }
      },
      "links": {},
      "address": "0x065092EBBB7E1e0A4CaBa6cB0fea573694884F93",
      "transactionHash": "0x55872b86ac473ef7fdce70382ad822901280c8e9a1c4cbdbb6454bf5cb2bf88d"
    },
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "_approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "_operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "_approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        }
      },
      "links": {},
      "address": "0xC72DCDD327989ae9A01Fe9D49270727B02DC9f47",
      "transactionHash": "0x4a15747571655bf5035e6e9e6faa3f9554fdd5b6fe391fac355837dd558cc615"
    }
  },
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-11-24T18:10:25.983Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}